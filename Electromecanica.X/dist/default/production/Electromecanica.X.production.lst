

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jul 19 13:01:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21  0000                     
    22                           ; Version 2.05
    23                           ; Generated 20/12/2018 GMT
    24                           ; 
    25                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F2550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  007A83                     __pidataCOMRAM:
    59                           	opt callstack 0
    60                           
    61                           ;initializer for _Last_Button_Menu_Down_State
    62  007A83  01                 	db	1
    63                           
    64                           ;initializer for _Last_Button_Menu_Up_State
    65  007A84  01                 	db	1
    66                           
    67                           ;initializer for _Last_Open_Contact_State
    68  007A85  01                 	db	1
    69                           
    70                           	psect	nvCOMRAM
    71  000035                     __pnvCOMRAM:
    72                           	opt callstack 0
    73  000035                     _Button_Menu_Up_State:
    74                           	opt callstack 0
    75  000035                     	ds	1
    76  0000                     _EECON2	set	4007
    77  0000                     _INTCONbits	set	4082
    78  0000                     _EECON1bits	set	4006
    79  0000                     _EEDATA	set	4008
    80  0000                     _EEADR	set	4009
    81  0000                     _ADRESL	set	4035
    82  0000                     _ADRESH	set	4036
    83  0000                     _PORTAbits	set	3968
    84  0000                     _PORTCbits	set	3970
    85  0000                     _PORTB	set	3969
    86  0000                     _TRISB	set	3987
    87  0000                     _ADCON2bits	set	4032
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _TRISCbits	set	3988
    90  0000                     _TRISAbits	set	3986
    91  0000                     _ADCON1	set	4033
    92                           
    93                           ; #config settings
    94  0000                     
    95                           	psect	cinit
    96  007AAE                     __pcinit:
    97                           	opt callstack 0
    98  007AAE                     start_initialization:
    99                           	opt callstack 0
   100  007AAE                     __initialization:
   101                           	opt callstack 0
   102                           
   103                           ; Initialize objects allocated to COMRAM (3 bytes)
   104                           ; load TBLPTR registers with __pidataCOMRAM
   105  007AAE  0E83               	movlw	low __pidataCOMRAM
   106  007AB0  6EF6               	movwf	tblptrl,c
   107  007AB2  0E7A               	movlw	high __pidataCOMRAM
   108  007AB4  6EF7               	movwf	tblptrh,c
   109  007AB6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   110  007AB8  6EF8               	movwf	tblptru,c
   111  007ABA  0009               	tblrd		*+	;fetch initializer
   112  007ABC  CFF5 F032          	movff	tablat,__pdataCOMRAM
   113  007AC0  0009               	tblrd		*+	;fetch initializer
   114  007AC2  CFF5 F033          	movff	tablat,__pdataCOMRAM+1
   115  007AC6  0009               	tblrd		*+	;fetch initializer
   116  007AC8  CFF5 F034          	movff	tablat,__pdataCOMRAM+2
   117                           
   118                           ; Clear objects allocated to COMRAM (45 bytes)
   119  007ACC  EE00  F001         	lfsr	0,__pbssCOMRAM
   120  007AD0  0E2D               	movlw	45
   121  007AD2                     clear_0:
   122  007AD2  6AEE               	clrf	postinc0,c
   123  007AD4  06E8               	decf	wreg,f,c
   124  007AD6  E1FD               	bnz	clear_0
   125  007AD8                     end_of_initialization:
   126                           	opt callstack 0
   127  007AD8                     __end_of__initialization:
   128                           	opt callstack 0
   129  007AD8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   130  007ADA  6EF8               	movwf	tblptru,c
   131  007ADC  0100               	movlb	0
   132  007ADE  EF71  F03D         	goto	_main	;jump to C main() function
   133                           
   134                           	psect	bssCOMRAM
   135  000001                     __pbssCOMRAM:
   136                           	opt callstack 0
   137  000001                     _Buffer1:
   138                           	opt callstack 0
   139  000001                     	ds	16
   140  000011                     _Count_Exit_Menu:
   141                           	opt callstack 0
   142  000011                     	ds	4
   143  000015                     _Count_Auto_Close:
   144                           	opt callstack 0
   145  000015                     	ds	4
   146  000019                     _Count_Time_Close:
   147                           	opt callstack 0
   148  000019                     	ds	4
   149  00001D                     _ADC:
   150                           	opt callstack 0
   151  00001D                     	ds	2
   152  00001F                     _Count_Push_Button:
   153                           	opt callstack 0
   154  00001F                     	ds	2
   155  000021                     _Current:
   156                           	opt callstack 0
   157  000021                     	ds	2
   158  000023                     _Count_Peake_Current:
   159                           	opt callstack 0
   160  000023                     	ds	2
   161  000025                     _Flag_Menu:
   162                           	opt callstack 0
   163  000025                     	ds	1
   164  000026                     _Toggle_Down:
   165                           	opt callstack 0
   166  000026                     	ds	1
   167  000027                     _Toggle_Up:
   168                           	opt callstack 0
   169  000027                     	ds	1
   170  000028                     _Button_Menu_Down_State:
   171                           	opt callstack 0
   172  000028                     	ds	1
   173  000029                     _End_Stop_Open_State:
   174                           	opt callstack 0
   175  000029                     	ds	1
   176  00002A                     _End_Stop_Close_State:
   177                           	opt callstack 0
   178  00002A                     	ds	1
   179  00002B                     _Open_Contact_State:
   180                           	opt callstack 0
   181  00002B                     	ds	1
   182  00002C                     _Inductive_State:
   183                           	opt callstack 0
   184  00002C                     	ds	1
   185  00002D                     _Last_Inductive_State:
   186                           	opt callstack 0
   187  00002D                     	ds	1
   188                           
   189                           	psect	dataCOMRAM
   190  000032                     __pdataCOMRAM:
   191                           	opt callstack 0
   192  000032                     _Last_Button_Menu_Down_State:
   193                           	opt callstack 0
   194  000032                     	ds	1
   195  000033                     _Last_Button_Menu_Up_State:
   196                           	opt callstack 0
   197  000033                     	ds	1
   198  000034                     _Last_Open_Contact_State:
   199                           	opt callstack 0
   200  000034                     	ds	1
   201                           
   202                           	psect	cstackCOMRAM
   203  00002E                     __pcstackCOMRAM:
   204                           	opt callstack 0
   205  00002E                     ??_Menu:
   206  00002E                     ?_Analog_Read:
   207                           	opt callstack 0
   208                           
   209                           ; 2 bytes @ 0x0
   210  00002E                     	ds	2
   211  000030                     ??_Menu_In:
   212  000030                     ??_Close_Lock:
   213  000030                     ??_Open_Lock:
   214  000030                     
   215                           ; 1 bytes @ 0x2
   216  000030                     	ds	2
   217  000032                     
   218                           ; 1 bytes @ 0x4
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 76 in file "main.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;		None
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      void 
   231 ;; Registers used:
   232 ;;		wreg, status,2, status,0, cstack
   233 ;; Tracked objects:
   234 ;;		On entry : 0/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   238 ;;      Params:         0       0       0       0       0       0       0       0       0
   239 ;;      Locals:         0       0       0       0       0       0       0       0       0
   240 ;;      Temps:          0       0       0       0       0       0       0       0       0
   241 ;;      Totals:         0       0       0       0       0       0       0       0       0
   242 ;;Total ram usage:        0 bytes
   243 ;; Hardware stack levels required when called:    4
   244 ;; This function calls:
   245 ;;		_Close_Lock
   246 ;;		_Menu_In
   247 ;;		_Open_Lock
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text0
   254  007AE2                     __ptext0:
   255                           	opt callstack 0
   256  007AE2                     _main:
   257                           	opt callstack 27
   258                           
   259                           ;main.c: 77:     ADCON1 = 0X0E;
   260                           
   261                           ;incstack = 0
   262  007AE2  0E0E               	movlw	14
   263  007AE4  6EC1               	movwf	4033,c	;volatile
   264                           
   265                           ;main.c: 79:     TRISAbits.RA0 = 1;
   266  007AE6  8092               	bsf	3986,0,c	;volatile
   267                           
   268                           ;main.c: 81:     TRISAbits.RA1 = 1;
   269  007AE8  8292               	bsf	3986,1,c	;volatile
   270                           
   271                           ;main.c: 82:     TRISAbits.RA4 = 1;
   272  007AEA  8892               	bsf	3986,4,c	;volatile
   273                           
   274                           ;main.c: 83:     TRISCbits.RC1 = 0;
   275  007AEC  9294               	bcf	3988,1,c	;volatile
   276                           
   277                           ;main.c: 84:     TRISCbits.RC2 = 0;
   278  007AEE  9494               	bcf	3988,2,c	;volatile
   279                           
   280                           ;main.c: 85:     TRISCbits.RC6 = 0;
   281  007AF0  9C94               	bcf	3988,6,c	;volatile
   282                           
   283                           ;main.c: 86:     TRISCbits.RC7 = 0;
   284  007AF2  9E94               	bcf	3988,7,c	;volatile
   285                           
   286                           ;main.c: 87:     TRISAbits.RA2 = 1;
   287  007AF4  8492               	bsf	3986,2,c	;volatile
   288                           
   289                           ;main.c: 88:     TRISAbits.RA3 = 1;
   290  007AF6  8692               	bsf	3986,3,c	;volatile
   291                           
   292                           ;main.c: 89:     TRISAbits.RA5 = 1;
   293  007AF8  8A92               	bsf	3986,5,c	;volatile
   294                           
   295                           ;main.c: 90:     TRISCbits.RC0 = 1;
   296  007AFA  8094               	bsf	3988,0,c	;volatile
   297                           
   298                           ;main.c: 93:     ADCON0bits.CHS = 0;
   299  007AFC  0EC3               	movlw	-61
   300  007AFE  16C2               	andwf	4034,f,c	;volatile
   301                           
   302                           ;main.c: 96:     ADCON2bits.ADCS = 0b000;
   303  007B00  0EF8               	movlw	-8
   304  007B02  16C0               	andwf	4032,f,c	;volatile
   305                           
   306                           ;main.c: 97:     ADCON2bits.ADFM = 1;
   307  007B04  8EC0               	bsf	4032,7,c	;volatile
   308                           
   309                           ;main.c: 98:     ADCON0bits.ADON = 1;
   310  007B06  80C2               	bsf	4034,0,c	;volatile
   311                           
   312                           ;main.c: 100:     TRISB = 0x00;
   313  007B08  0E00               	movlw	0
   314  007B0A  6E93               	movwf	3987,c	;volatile
   315                           
   316                           ;main.c: 101:     PORTB = 0xFF;
   317  007B0C  6881               	setf	3969,c	;volatile
   318                           
   319                           ;main.c: 103:     PORTCbits.RC7 = 0;
   320  007B0E  9E82               	bcf	3970,7,c	;volatile
   321                           
   322                           ;main.c: 104:     PORTCbits.RC6 = 0;
   323  007B10  9C82               	bcf	3970,6,c	;volatile
   324                           
   325                           ;main.c: 105:     PORTCbits.RC1 = 0;
   326  007B12  9282               	bcf	3970,1,c	;volatile
   327                           
   328                           ;main.c: 106:     PORTCbits.RC2 = 0;
   329  007B14  9482               	bcf	3970,2,c	;volatile
   330  007B16                     l1339:
   331                           
   332                           ;main.c: 109:         Menu_In();
   333  007B16  EC4C  F03E         	call	_Menu_In	;wreg free
   334                           
   335                           ;main.c: 110:         Close_Lock();
   336  007B1A  ECB6  F03D         	call	_Close_Lock	;wreg free
   337                           
   338                           ;main.c: 111:         Open_Lock();
   339  007B1E  EC46  F03F         	call	_Open_Lock	;wreg free
   340  007B22  D7F9               	goto	l1339
   341  007B24                     __end_of_main:
   342                           	opt callstack 0
   343                           
   344 ;; *************** function _Open_Lock *****************
   345 ;; Defined at:
   346 ;;		line 138 in file "main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2, status,0, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   360 ;;      Params:         0       0       0       0       0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0       0       0       0       0
   362 ;;      Temps:          2       0       0       0       0       0       0       0       0
   363 ;;      Totals:         2       0       0       0       0       0       0       0       0
   364 ;;Total ram usage:        2 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; Hardware stack levels required when called:    3
   367 ;; This function calls:
   368 ;;		_Closing
   369 ;;		_Sense_Current
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text1
   376  007E8C                     __ptext1:
   377                           	opt callstack 0
   378  007E8C                     _Open_Lock:
   379                           	opt callstack 27
   380                           
   381                           ;main.c: 139:     Open_Contact_State = PORTAbits.RA4;
   382                           
   383                           ;incstack = 0
   384  007E8C  A880               	btfss	3968,4,c	;volatile
   385  007E8E  D002               	goto	u620
   386  007E90  0E01               	movlw	1
   387  007E92  D001               	goto	u626
   388  007E94                     u620:
   389  007E94  0E00               	movlw	0
   390  007E96                     u626:
   391  007E96  6E2B               	movwf	_Open_Contact_State,c
   392                           
   393                           ;main.c: 140:     _delay((unsigned long)((50)*(20000000/4000.0)));
   394  007E98  0E02               	movlw	2
   395  007E9A  6E31               	movwf	(??_Open_Lock+1)& (0+255),c
   396  007E9C  0E45               	movlw	69
   397  007E9E  6E30               	movwf	??_Open_Lock& (0+255),c
   398  007EA0  0EAA               	movlw	170
   399  007EA2                     u807:
   400  007EA2  2EE8               	decfsz	wreg,f,c
   401  007EA4  D7FE               	bra	u807
   402  007EA6  2E30               	decfsz	??_Open_Lock& (0+255),f,c
   403  007EA8  D7FC               	bra	u807
   404  007EAA  2E31               	decfsz	(??_Open_Lock+1)& (0+255),f,c
   405  007EAC  D7FA               	bra	u807
   406                           
   407                           ;main.c: 141:     if(Open_Contact_State == 0 && Last_Open_Contact_State == 1) {
   408  007EAE  502B               	movf	_Open_Contact_State,w,c
   409  007EB0  A4D8               	btfss	status,2,c
   410  007EB2  D0A3               	goto	l1299
   411  007EB4  0434               	decf	_Last_Open_Contact_State,w,c
   412  007EB6  A4D8               	btfss	status,2,c
   413  007EB8  D0A0               	goto	l1299
   414                           
   415                           ;main.c: 142:         _delay((unsigned long)((50)*(20000000/4000.0)));
   416  007EBA  0E02               	movlw	2
   417  007EBC  6E31               	movwf	(??_Open_Lock+1)& (0+255),c
   418  007EBE  0E45               	movlw	69
   419  007EC0  6E30               	movwf	??_Open_Lock& (0+255),c
   420  007EC2  0EAA               	movlw	170
   421  007EC4                     u817:
   422  007EC4  2EE8               	decfsz	wreg,f,c
   423  007EC6  D7FE               	bra	u817
   424  007EC8  2E30               	decfsz	??_Open_Lock& (0+255),f,c
   425  007ECA  D7FC               	bra	u817
   426  007ECC  2E31               	decfsz	(??_Open_Lock+1)& (0+255),f,c
   427  007ECE  D7FA               	bra	u817
   428                           
   429                           ;main.c: 143:         End_Stop_Open_State = PORTAbits.RA2;
   430  007ED0  A480               	btfss	3968,2,c	;volatile
   431  007ED2  D002               	goto	u650
   432  007ED4  0E01               	movlw	1
   433  007ED6  D001               	goto	u656
   434  007ED8                     u650:
   435  007ED8  0E00               	movlw	0
   436  007EDA                     u656:
   437  007EDA  6E29               	movwf	_End_Stop_Open_State,c
   438                           
   439                           ;main.c: 144:         if(Open_Contact_State == 0 && Last_Open_Contact_State == 1 && End_
      +                          Stop_Open_State == 1) {
   440  007EDC  502B               	movf	_Open_Contact_State,w,c
   441  007EDE  A4D8               	btfss	status,2,c
   442  007EE0  D08C               	goto	l1299
   443  007EE2  0434               	decf	_Last_Open_Contact_State,w,c
   444  007EE4  A4D8               	btfss	status,2,c
   445  007EE6  D089               	goto	l1299
   446  007EE8  0429               	decf	_End_Stop_Open_State,w,c
   447  007EEA  A4D8               	btfss	status,2,c
   448  007EEC  D086               	goto	l1299
   449  007EEE                     u680:
   450                           
   451                           ;main.c: 146:                 PORTCbits.RC2 = 1;
   452                           
   453                           ;main.c: 145:             do {
   454  007EEE  8482               	bsf	3970,2,c	;volatile
   455                           
   456                           ;main.c: 147:                 End_Stop_Open_State = PORTAbits.RA2;
   457  007EF0  A480               	btfss	3968,2,c	;volatile
   458  007EF2  D002               	goto	u690
   459  007EF4  0E01               	movlw	1
   460  007EF6  D001               	goto	u696
   461  007EF8                     u690:
   462  007EF8  0E00               	movlw	0
   463  007EFA                     u696:
   464  007EFA  6E29               	movwf	_End_Stop_Open_State,c
   465                           
   466                           ;main.c: 148:                 Count_Time_Close++;
   467  007EFC  0E01               	movlw	1
   468  007EFE  2619               	addwf	_Count_Time_Close,f,c
   469  007F00  0E00               	movlw	0
   470  007F02  221A               	addwfc	_Count_Time_Close+1,f,c
   471  007F04  221B               	addwfc	_Count_Time_Close+2,f,c
   472  007F06  221C               	addwfc	_Count_Time_Close+3,f,c
   473                           
   474                           ;main.c: 149:                 Sense_Current();
   475  007F08  EC92  F03D         	call	_Sense_Current	;wreg free
   476                           
   477                           ;main.c: 150:                 if(Count_Time_Close == 250000) {
   478  007F0C  0E90               	movlw	144
   479  007F0E  1819               	xorwf	_Count_Time_Close,w,c
   480  007F10  E111               	bnz	l1273
   481  007F12  0ED0               	movlw	208
   482  007F14  181A               	xorwf	_Count_Time_Close+1,w,c
   483  007F16  E10E               	bnz	l1273
   484  007F18  0E03               	movlw	3
   485  007F1A  181B               	xorwf	_Count_Time_Close+2,w,c
   486  007F1C  101C               	iorwf	_Count_Time_Close+3,w,c
   487  007F1E  A4D8               	btfss	status,2,c
   488  007F20  D009               	goto	l1273
   489                           
   490                           ;main.c: 151:                     Count_Time_Close = 0;
   491  007F22  0E00               	movlw	0
   492  007F24  6E19               	movwf	_Count_Time_Close,c
   493  007F26  0E00               	movlw	0
   494  007F28  6E1A               	movwf	_Count_Time_Close+1,c
   495  007F2A  0E00               	movlw	0
   496  007F2C  6E1B               	movwf	_Count_Time_Close+2,c
   497  007F2E  0E00               	movlw	0
   498  007F30  6E1C               	movwf	_Count_Time_Close+3,c
   499                           
   500                           ;main.c: 152:                     break;
   501  007F32  D01A               	goto	u730
   502  007F34                     l1273:
   503  007F34  BE22               	btfsc	_Current+1,7,c
   504  007F36  D015               	goto	l1281
   505  007F38  0E21               	movlw	33
   506  007F3A  5C21               	subwf	_Current,w,c
   507  007F3C  0E02               	movlw	2
   508  007F3E  5822               	subwfb	_Current+1,w,c
   509  007F40  A0D8               	btfss	status,0,c
   510  007F42  D00F               	goto	l1281
   511                           
   512                           ;main.c: 154:                     Count_Peake_Current++;
   513  007F44  4A23               	infsnz	_Count_Peake_Current,f,c
   514  007F46  2A24               	incf	_Count_Peake_Current+1,f,c
   515                           
   516                           ;main.c: 155:                     if (Count_Peake_Current > 2000) {
   517  007F48  BE24               	btfsc	_Count_Peake_Current+1,7,c
   518  007F4A  D00B               	goto	l1281
   519  007F4C  0ED1               	movlw	209
   520  007F4E  5C23               	subwf	_Count_Peake_Current,w,c
   521  007F50  0E07               	movlw	7
   522  007F52  5824               	subwfb	_Count_Peake_Current+1,w,c
   523  007F54  A0D8               	btfss	status,0,c
   524  007F56  D005               	goto	l1281
   525                           
   526                           ;main.c: 156:                         Count_Peake_Current = 0;
   527  007F58  0E00               	movlw	0
   528  007F5A  6E24               	movwf	_Count_Peake_Current+1,c
   529  007F5C  0E00               	movlw	0
   530  007F5E  6E23               	movwf	_Count_Peake_Current,c
   531                           
   532                           ;main.c: 157:                         break;
   533  007F60  D003               	goto	u730
   534  007F62                     l1281:
   535                           
   536                           ;main.c: 160:             } while(End_Stop_Open_State == 1);
   537  007F62  0429               	decf	_End_Stop_Open_State,w,c
   538  007F64  B4D8               	btfsc	status,2,c
   539  007F66  D7C3               	goto	u680
   540  007F68                     u730:
   541                           
   542                           ;main.c: 161:             PORTCbits.RC2 = 0;
   543  007F68  9482               	bcf	3970,2,c	;volatile
   544                           
   545                           ;main.c: 162:             Count_Time_Close = 0;
   546  007F6A  0E00               	movlw	0
   547  007F6C  6E19               	movwf	_Count_Time_Close,c
   548  007F6E  0E00               	movlw	0
   549  007F70  6E1A               	movwf	_Count_Time_Close+1,c
   550  007F72  0E00               	movlw	0
   551  007F74  6E1B               	movwf	_Count_Time_Close+2,c
   552  007F76  0E00               	movlw	0
   553  007F78  6E1C               	movwf	_Count_Time_Close+3,c
   554                           
   555                           ;main.c: 163:             Count_Peake_Current = 0;
   556  007F7A  0E00               	movlw	0
   557  007F7C  6E24               	movwf	_Count_Peake_Current+1,c
   558  007F7E  0E00               	movlw	0
   559  007F80  6E23               	movwf	_Count_Peake_Current,c
   560                           
   561                           ;main.c: 164:             Inductive_State = PORTAbits.RA1;
   562  007F82  A280               	btfss	3968,1,c	;volatile
   563  007F84  D002               	goto	u740
   564  007F86  0E01               	movlw	1
   565  007F88  D001               	goto	u746
   566  007F8A                     u740:
   567  007F8A  0E00               	movlw	0
   568  007F8C                     u746:
   569  007F8C  6E2C               	movwf	_Inductive_State,c
   570  007F8E                     l1285:
   571                           
   572                           ;main.c: 166:                 Count_Auto_Close++;
   573  007F8E  0E01               	movlw	1
   574  007F90  2615               	addwf	_Count_Auto_Close,f,c
   575  007F92  0E00               	movlw	0
   576  007F94  2216               	addwfc	_Count_Auto_Close+1,f,c
   577  007F96  2217               	addwfc	_Count_Auto_Close+2,f,c
   578  007F98  2218               	addwfc	_Count_Auto_Close+3,f,c
   579                           
   580                           ;main.c: 167:                 Inductive_State = PORTAbits.RA1;
   581  007F9A  A280               	btfss	3968,1,c	;volatile
   582  007F9C  D002               	goto	u750
   583  007F9E  0E01               	movlw	1
   584  007FA0  D001               	goto	u756
   585  007FA2                     u750:
   586  007FA2  0E00               	movlw	0
   587  007FA4                     u756:
   588  007FA4  6E2C               	movwf	_Inductive_State,c
   589                           
   590                           ;main.c: 168:                 if(Count_Auto_Close == 1000000) {
   591  007FA6  0E40               	movlw	64
   592  007FA8  1815               	xorwf	_Count_Auto_Close,w,c
   593  007FAA  E11C               	bnz	l1295
   594  007FAC  0E42               	movlw	66
   595  007FAE  1816               	xorwf	_Count_Auto_Close+1,w,c
   596  007FB0  E119               	bnz	l1295
   597  007FB2  0E0F               	movlw	15
   598  007FB4  1817               	xorwf	_Count_Auto_Close+2,w,c
   599  007FB6  1018               	iorwf	_Count_Auto_Close+3,w,c
   600  007FB8  A4D8               	btfss	status,2,c
   601  007FBA  D014               	goto	l1295
   602                           
   603                           ;main.c: 169:                     End_Stop_Open_State = PORTAbits.RA2;
   604  007FBC  A480               	btfss	3968,2,c	;volatile
   605  007FBE  D002               	goto	u770
   606  007FC0  0E01               	movlw	1
   607  007FC2  D001               	goto	u776
   608  007FC4                     u770:
   609  007FC4  0E00               	movlw	0
   610  007FC6                     u776:
   611  007FC6  6E29               	movwf	_End_Stop_Open_State,c
   612                           
   613                           ;main.c: 170:                     if(End_Stop_Open_State == 0) {
   614  007FC8  5029               	movf	_End_Stop_Open_State,w,c
   615  007FCA  A4D8               	btfss	status,2,c
   616  007FCC  D00E               	goto	u790
   617                           
   618                           ;main.c: 171:                         Closing();
   619  007FCE  ECF7  F03D         	call	_Closing	;wreg free
   620                           
   621                           ;main.c: 172:                         Count_Auto_Close = 0;
   622  007FD2  0E00               	movlw	0
   623  007FD4  6E15               	movwf	_Count_Auto_Close,c
   624  007FD6  0E00               	movlw	0
   625  007FD8  6E16               	movwf	_Count_Auto_Close+1,c
   626  007FDA  0E00               	movlw	0
   627  007FDC  6E17               	movwf	_Count_Auto_Close+2,c
   628  007FDE  0E00               	movlw	0
   629  007FE0  6E18               	movwf	_Count_Auto_Close+3,c
   630  007FE2  D003               	goto	u790
   631  007FE4                     l1295:
   632                           
   633                           ;main.c: 176:             } while(Inductive_State == 1);
   634  007FE4  042C               	decf	_Inductive_State,w,c
   635  007FE6  B4D8               	btfsc	status,2,c
   636  007FE8  D7D2               	goto	l1285
   637  007FEA                     u790:
   638                           
   639                           ;main.c: 177:             Count_Auto_Close = 0;
   640  007FEA  0E00               	movlw	0
   641  007FEC  6E15               	movwf	_Count_Auto_Close,c
   642  007FEE  0E00               	movlw	0
   643  007FF0  6E16               	movwf	_Count_Auto_Close+1,c
   644  007FF2  0E00               	movlw	0
   645  007FF4  6E17               	movwf	_Count_Auto_Close+2,c
   646  007FF6  0E00               	movlw	0
   647  007FF8  6E18               	movwf	_Count_Auto_Close+3,c
   648  007FFA                     l1299:
   649                           
   650                           ;main.c: 180:     Last_Open_Contact_State = Open_Contact_State;
   651  007FFA  C02B  F034         	movff	_Open_Contact_State,_Last_Open_Contact_State
   652  007FFE  0012               	return		;funcret
   653  008000                     __end_of_Open_Lock:
   654                           	opt callstack 0
   655                           
   656 ;; *************** function _Menu_In *****************
   657 ;; Defined at:
   658 ;;		line 273 in file "main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   672 ;;      Params:         0       0       0       0       0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0       0       0       0       0
   674 ;;      Temps:          2       0       0       0       0       0       0       0       0
   675 ;;      Totals:         2       0       0       0       0       0       0       0       0
   676 ;;Total ram usage:        2 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; Hardware stack levels required when called:    1
   679 ;; This function calls:
   680 ;;		_Menu
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text2
   687  007C98                     __ptext2:
   688                           	opt callstack 0
   689  007C98                     _Menu_In:
   690                           	opt callstack 29
   691                           
   692                           ;main.c: 274:     Button_Menu_Up_State = PORTAbits.RA5;
   693                           
   694                           ;incstack = 0
   695  007C98  AA80               	btfss	3968,5,c	;volatile
   696  007C9A  D002               	goto	u120
   697  007C9C  0E01               	movlw	1
   698  007C9E  D001               	goto	u126
   699  007CA0                     u120:
   700  007CA0  0E00               	movlw	0
   701  007CA2                     u126:
   702  007CA2  6E35               	movwf	_Button_Menu_Up_State,c
   703                           
   704                           ;main.c: 275:     _delay((unsigned long)((1)*(20000000/4000.0)));
   705  007CA4  0E07               	movlw	7
   706  007CA6  6E30               	movwf	??_Menu_In& (0+255),c
   707  007CA8  0E7D               	movlw	125
   708  007CAA                     u827:
   709  007CAA  2EE8               	decfsz	wreg,f,c
   710  007CAC  D7FE               	bra	u827
   711  007CAE  2E30               	decfsz	??_Menu_In& (0+255),f,c
   712  007CB0  D7FC               	bra	u827
   713  007CB2  F000               	nop	
   714                           
   715                           ;main.c: 276:     if (Button_Menu_Up_State == 0 && Last_Button_Menu_Up_State == 1) {
   716  007CB4  5035               	movf	_Button_Menu_Up_State,w,c
   717  007CB6  A4D8               	btfss	status,2,c
   718  007CB8  D022               	goto	l995
   719  007CBA  0433               	decf	_Last_Button_Menu_Up_State,w,c
   720  007CBC  A4D8               	btfss	status,2,c
   721  007CBE  D01F               	goto	l995
   722                           
   723                           ;main.c: 277:         Toggle_Up = 1;
   724  007CC0  0E01               	movlw	1
   725  007CC2  6E27               	movwf	_Toggle_Up,c
   726                           
   727                           ;main.c: 278:         if (Toggle_Up == 1 && Toggle_Down == 1) {
   728  007CC4  0427               	decf	_Toggle_Up,w,c
   729  007CC6  A4D8               	btfss	status,2,c
   730  007CC8  D01A               	goto	l995
   731  007CCA  0426               	decf	_Toggle_Down,w,c
   732  007CCC  A4D8               	btfss	status,2,c
   733  007CCE  D017               	goto	l995
   734                           
   735                           ;main.c: 279:             Flag_Menu = 1;
   736  007CD0  0E01               	movlw	1
   737  007CD2  6E25               	movwf	_Flag_Menu,c
   738                           
   739                           ;main.c: 280:             Toggle_Up = 0;
   740  007CD4  0E00               	movlw	0
   741  007CD6  6E27               	movwf	_Toggle_Up,c
   742                           
   743                           ;main.c: 281:             Toggle_Down = 0;
   744  007CD8  0E00               	movlw	0
   745  007CDA  6E26               	movwf	_Toggle_Down,c
   746                           
   747                           ;main.c: 282:             Count_Push_Button = 0;
   748  007CDC  0E00               	movlw	0
   749  007CDE  6E20               	movwf	_Count_Push_Button+1,c
   750  007CE0  0E00               	movlw	0
   751  007CE2  6E1F               	movwf	_Count_Push_Button,c
   752                           
   753                           ;main.c: 283:             _delay((unsigned long)((100)*(20000000/4000.0)));
   754  007CE4  0E03               	movlw	3
   755  007CE6  6E31               	movwf	(??_Menu_In+1)& (0+255),c
   756  007CE8  0E8A               	movlw	138
   757  007CEA  6E30               	movwf	??_Menu_In& (0+255),c
   758  007CEC  0E56               	movlw	86
   759  007CEE                     u837:
   760  007CEE  2EE8               	decfsz	wreg,f,c
   761  007CF0  D7FE               	bra	u837
   762  007CF2  2E30               	decfsz	??_Menu_In& (0+255),f,c
   763  007CF4  D7FC               	bra	u837
   764  007CF6  2E31               	decfsz	(??_Menu_In+1)& (0+255),f,c
   765  007CF8  D7FA               	bra	u837
   766                           
   767                           ;main.c: 284:             Menu();
   768  007CFA  ECB7  F03E         	call	_Menu	;wreg free
   769  007CFE                     l995:
   770                           
   771                           ;main.c: 287:     Last_Button_Menu_Up_State = Button_Menu_Up_State;
   772  007CFE  C035  F033         	movff	_Button_Menu_Up_State,_Last_Button_Menu_Up_State
   773                           
   774                           ;main.c: 289:     Button_Menu_Down_State = PORTCbits.RC0;
   775  007D02  A082               	btfss	3970,0,c	;volatile
   776  007D04  D002               	goto	u170
   777  007D06  0E01               	movlw	1
   778  007D08  D001               	goto	u176
   779  007D0A                     u170:
   780  007D0A  0E00               	movlw	0
   781  007D0C                     u176:
   782  007D0C  6E28               	movwf	_Button_Menu_Down_State,c
   783                           
   784                           ;main.c: 290:     _delay((unsigned long)((1)*(20000000/4000.0)));
   785  007D0E  0E07               	movlw	7
   786  007D10  6E30               	movwf	??_Menu_In& (0+255),c
   787  007D12  0E7D               	movlw	125
   788  007D14                     u847:
   789  007D14  2EE8               	decfsz	wreg,f,c
   790  007D16  D7FE               	bra	u847
   791  007D18  2E30               	decfsz	??_Menu_In& (0+255),f,c
   792  007D1A  D7FC               	bra	u847
   793  007D1C  F000               	nop	
   794                           
   795                           ;main.c: 291:     if (Button_Menu_Down_State == 0 && Last_Button_Menu_Down_State == 1) {
   796  007D1E  5028               	movf	_Button_Menu_Down_State,w,c
   797  007D20  A4D8               	btfss	status,2,c
   798  007D22  D022               	goto	l1017
   799  007D24  0432               	decf	_Last_Button_Menu_Down_State,w,c
   800  007D26  A4D8               	btfss	status,2,c
   801  007D28  D01F               	goto	l1017
   802                           
   803                           ;main.c: 292:         Toggle_Down = 1;
   804  007D2A  0E01               	movlw	1
   805  007D2C  6E26               	movwf	_Toggle_Down,c
   806                           
   807                           ;main.c: 293:         if (Toggle_Down == 1 && Toggle_Up == 1) {
   808  007D2E  0426               	decf	_Toggle_Down,w,c
   809  007D30  A4D8               	btfss	status,2,c
   810  007D32  D01A               	goto	l1017
   811  007D34  0427               	decf	_Toggle_Up,w,c
   812  007D36  A4D8               	btfss	status,2,c
   813  007D38  D017               	goto	l1017
   814                           
   815                           ;main.c: 294:             Flag_Menu = 1;
   816  007D3A  0E01               	movlw	1
   817  007D3C  6E25               	movwf	_Flag_Menu,c
   818                           
   819                           ;main.c: 295:             Toggle_Down = 0;
   820  007D3E  0E00               	movlw	0
   821  007D40  6E26               	movwf	_Toggle_Down,c
   822                           
   823                           ;main.c: 296:             Toggle_Up = 0;
   824  007D42  0E00               	movlw	0
   825  007D44  6E27               	movwf	_Toggle_Up,c
   826                           
   827                           ;main.c: 297:             Count_Push_Button = 0;
   828  007D46  0E00               	movlw	0
   829  007D48  6E20               	movwf	_Count_Push_Button+1,c
   830  007D4A  0E00               	movlw	0
   831  007D4C  6E1F               	movwf	_Count_Push_Button,c
   832                           
   833                           ;main.c: 298:             _delay((unsigned long)((100)*(20000000/4000.0)));
   834  007D4E  0E03               	movlw	3
   835  007D50  6E31               	movwf	(??_Menu_In+1)& (0+255),c
   836  007D52  0E8A               	movlw	138
   837  007D54  6E30               	movwf	??_Menu_In& (0+255),c
   838  007D56  0E56               	movlw	86
   839  007D58                     u857:
   840  007D58  2EE8               	decfsz	wreg,f,c
   841  007D5A  D7FE               	bra	u857
   842  007D5C  2E30               	decfsz	??_Menu_In& (0+255),f,c
   843  007D5E  D7FC               	bra	u857
   844  007D60  2E31               	decfsz	(??_Menu_In+1)& (0+255),f,c
   845  007D62  D7FA               	bra	u857
   846                           
   847                           ;main.c: 299:             Menu();
   848  007D64  ECB7  F03E         	call	_Menu	;wreg free
   849  007D68                     l1017:
   850                           
   851                           ;main.c: 302:     Last_Button_Menu_Down_State = Button_Menu_Down_State;
   852  007D68  C028  F032         	movff	_Button_Menu_Down_State,_Last_Button_Menu_Down_State
   853  007D6C  0012               	return		;funcret
   854  007D6E                     __end_of_Menu_In:
   855                           	opt callstack 0
   856                           
   857 ;; *************** function _Menu *****************
   858 ;; Defined at:
   859 ;;		line 306 in file "main.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   873 ;;      Params:         0       0       0       0       0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0
   875 ;;      Temps:          2       0       0       0       0       0       0       0       0
   876 ;;      Totals:         2       0       0       0       0       0       0       0       0
   877 ;;Total ram usage:        2 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_Menu_In
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text3
   887  007D6E                     __ptext3:
   888                           	opt callstack 0
   889  007D6E                     _Menu:
   890                           	opt callstack 29
   891                           
   892                           ;main.c: 308:         switch (Count_Push_Button)
   893                           
   894                           ;incstack = 0
   895                           ;main.c: 307:     do {
   896  007D6E  D064               	goto	l959
   897  007D70                     l899:
   898                           
   899                           ;main.c: 311:             PORTB = 0x19;
   900  007D70  0E19               	movlw	25
   901  007D72  6E81               	movwf	3969,c	;volatile
   902                           
   903                           ;main.c: 312:             PORTCbits.RC7 = 1;
   904  007D74  8E82               	bsf	3970,7,c	;volatile
   905                           
   906                           ;main.c: 313:             _delay((unsigned long)((1600)*(20000000/4000000.0)));
   907  007D76  0E0B               	movlw	11
   908  007D78  6E2E               	movwf	??_Menu& (0+255),c
   909  007D7A  0E62               	movlw	98
   910  007D7C                     u867:
   911  007D7C  2EE8               	decfsz	wreg,f,c
   912  007D7E  D7FE               	bra	u867
   913  007D80  2E2E               	decfsz	??_Menu& (0+255),f,c
   914  007D82  D7FC               	bra	u867
   915  007D84  D000               	nop2	
   916                           
   917                           ;main.c: 314:             PORTCbits.RC7 = 0;
   918  007D86  9E82               	bcf	3970,7,c	;volatile
   919                           
   920                           ;main.c: 315:             PORTB = 0xF3;
   921  007D88  0EF3               	movlw	243
   922  007D8A  6E81               	movwf	3969,c	;volatile
   923                           
   924                           ;main.c: 316:             PORTCbits.RC6 = 1;
   925  007D8C  8C82               	bsf	3970,6,c	;volatile
   926                           
   927                           ;main.c: 317:             _delay((unsigned long)((1600)*(20000000/4000000.0)));
   928  007D8E  0E0B               	movlw	11
   929  007D90  6E2E               	movwf	??_Menu& (0+255),c
   930  007D92  0E62               	movlw	98
   931  007D94                     u877:
   932  007D94  2EE8               	decfsz	wreg,f,c
   933  007D96  D7FE               	bra	u877
   934  007D98  2E2E               	decfsz	??_Menu& (0+255),f,c
   935  007D9A  D7FC               	bra	u877
   936  007D9C  D046               	goto	L3
   937  007D9E                     l911:
   938                           
   939                           ;main.c: 318:             PORTCbits.RC6 = 0;
   940  007D9E  9C82               	bcf	3970,6,c	;volatile
   941                           
   942                           ;main.c: 319:             break;
   943  007DA0  D061               	goto	l961
   944  007DA2                     l913:
   945                           
   946                           ;main.c: 321:             PORTB = 0x19;
   947  007DA2  0E19               	movlw	25
   948  007DA4  6E81               	movwf	3969,c	;volatile
   949                           
   950                           ;main.c: 322:             PORTCbits.RC7 = 1;
   951  007DA6  8E82               	bsf	3970,7,c	;volatile
   952                           
   953                           ;main.c: 323:             _delay((unsigned long)((1600)*(20000000/4000000.0)));
   954  007DA8  0E0B               	movlw	11
   955  007DAA  6E2E               	movwf	??_Menu& (0+255),c
   956  007DAC  0E62               	movlw	98
   957  007DAE                     u887:
   958  007DAE  2EE8               	decfsz	wreg,f,c
   959  007DB0  D7FE               	bra	u887
   960  007DB2  2E2E               	decfsz	??_Menu& (0+255),f,c
   961  007DB4  D7FC               	bra	u887
   962  007DB6  D000               	nop2	
   963                           
   964                           ;main.c: 324:             PORTCbits.RC7 = 0;
   965  007DB8  9E82               	bcf	3970,7,c	;volatile
   966                           
   967                           ;main.c: 325:             PORTB = 0x49;
   968  007DBA  0E49               	movlw	73
   969  007DBC  6E81               	movwf	3969,c	;volatile
   970                           
   971                           ;main.c: 326:             PORTCbits.RC6 = 1;
   972  007DBE  8C82               	bsf	3970,6,c	;volatile
   973                           
   974                           ;main.c: 327:             _delay((unsigned long)((1600)*(20000000/4000000.0)));
   975  007DC0  0E0B               	movlw	11
   976  007DC2  6E2E               	movwf	??_Menu& (0+255),c
   977  007DC4  0E62               	movlw	98
   978  007DC6                     u897:
   979  007DC6  2EE8               	decfsz	wreg,f,c
   980  007DC8  D7FE               	bra	u897
   981  007DCA  2E2E               	decfsz	??_Menu& (0+255),f,c
   982  007DCC  D7FC               	bra	u897
   983  007DCE  D02D               	goto	L3
   984  007DD0                     l927:
   985                           
   986                           ;main.c: 331:             PORTB = 0x19;
   987  007DD0  0E19               	movlw	25
   988  007DD2  6E81               	movwf	3969,c	;volatile
   989                           
   990                           ;main.c: 332:             PORTCbits.RC7 = 1;
   991  007DD4  8E82               	bsf	3970,7,c	;volatile
   992                           
   993                           ;main.c: 333:             _delay((unsigned long)((1600)*(20000000/4000000.0)));
   994  007DD6  0E0B               	movlw	11
   995  007DD8  6E2E               	movwf	??_Menu& (0+255),c
   996  007DDA  0E62               	movlw	98
   997  007DDC                     u907:
   998  007DDC  2EE8               	decfsz	wreg,f,c
   999  007DDE  D7FE               	bra	u907
  1000  007DE0  2E2E               	decfsz	??_Menu& (0+255),f,c
  1001  007DE2  D7FC               	bra	u907
  1002  007DE4  D000               	nop2	
  1003                           
  1004                           ;main.c: 334:             PORTCbits.RC7 = 0;
  1005  007DE6  9E82               	bcf	3970,7,c	;volatile
  1006                           
  1007                           ;main.c: 335:             PORTB = 0x61;
  1008  007DE8  0E61               	movlw	97
  1009  007DEA  6E81               	movwf	3969,c	;volatile
  1010                           
  1011                           ;main.c: 336:             PORTCbits.RC6 = 1;
  1012  007DEC  8C82               	bsf	3970,6,c	;volatile
  1013                           
  1014                           ;main.c: 337:             _delay((unsigned long)((1600)*(20000000/4000000.0)));
  1015  007DEE  0E0B               	movlw	11
  1016  007DF0  6E2E               	movwf	??_Menu& (0+255),c
  1017  007DF2  0E62               	movlw	98
  1018  007DF4                     u917:
  1019  007DF4  2EE8               	decfsz	wreg,f,c
  1020  007DF6  D7FE               	bra	u917
  1021  007DF8  2E2E               	decfsz	??_Menu& (0+255),f,c
  1022  007DFA  D7FC               	bra	u917
  1023  007DFC  D016               	goto	L3
  1024  007DFE                     l941:
  1025                           
  1026                           ;main.c: 341:             PORTB = 0x19;
  1027  007DFE  0E19               	movlw	25
  1028  007E00  6E81               	movwf	3969,c	;volatile
  1029                           
  1030                           ;main.c: 342:             PORTCbits.RC7 = 1;
  1031  007E02  8E82               	bsf	3970,7,c	;volatile
  1032                           
  1033                           ;main.c: 343:             _delay((unsigned long)((1600)*(20000000/4000000.0)));
  1034  007E04  0E0B               	movlw	11
  1035  007E06  6E2E               	movwf	??_Menu& (0+255),c
  1036  007E08  0E62               	movlw	98
  1037  007E0A                     u927:
  1038  007E0A  2EE8               	decfsz	wreg,f,c
  1039  007E0C  D7FE               	bra	u927
  1040  007E0E  2E2E               	decfsz	??_Menu& (0+255),f,c
  1041  007E10  D7FC               	bra	u927
  1042  007E12  D000               	nop2	
  1043                           
  1044                           ;main.c: 344:             PORTCbits.RC7 = 0;
  1045  007E14  9E82               	bcf	3970,7,c	;volatile
  1046                           
  1047                           ;main.c: 345:             PORTB = 0x33;
  1048  007E16  0E33               	movlw	51
  1049  007E18  6E81               	movwf	3969,c	;volatile
  1050                           
  1051                           ;main.c: 346:             PORTCbits.RC6 = 1;
  1052  007E1A  8C82               	bsf	3970,6,c	;volatile
  1053                           
  1054                           ;main.c: 347:             _delay((unsigned long)((1600)*(20000000/4000000.0)));
  1055  007E1C  0E0B               	movlw	11
  1056  007E1E  6E2E               	movwf	??_Menu& (0+255),c
  1057  007E20  0E62               	movlw	98
  1058  007E22                     u937:
  1059  007E22  2EE8               	decfsz	wreg,f,c
  1060  007E24  D7FE               	bra	u937
  1061  007E26  2E2E               	decfsz	??_Menu& (0+255),f,c
  1062  007E28  D7FC               	bra	u937
  1063  007E2A                     L3:
  1064  007E2A  D000               	nop2	
  1065  007E2C  D7B8               	goto	l911
  1066  007E2E                     l955:
  1067                           
  1068                           ;main.c: 351:             Count_Push_Button = 0;
  1069  007E2E  0E00               	movlw	0
  1070  007E30  6E20               	movwf	_Count_Push_Button+1,c
  1071  007E32  0E00               	movlw	0
  1072  007E34  6E1F               	movwf	_Count_Push_Button,c
  1073                           
  1074                           ;main.c: 352:             break;
  1075  007E36  D016               	goto	l961
  1076  007E38                     l959:
  1077  007E38  C01F  F02E         	movff	_Count_Push_Button,??_Menu
  1078  007E3C  C020  F02F         	movff	_Count_Push_Button+1,??_Menu+1
  1079                           
  1080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1081                           ; Switch size 1, requested type "simple"
  1082                           ; Number of cases is 1, Range of values is 0 to 0
  1083                           ; switch strategies available:
  1084                           ; Name         Instructions Cycles
  1085                           ; simple_byte            4     3 (average)
  1086                           ;	Chosen strategy is simple_byte
  1087  007E40  502F               	movf	??_Menu+1,w,c
  1088  007E42  0A00               	xorlw	0	; case 0
  1089  007E44  A4D8               	btfss	status,2,c
  1090  007E46  D7F3               	goto	l955
  1091                           
  1092                           ; Switch size 1, requested type "simple"
  1093                           ; Number of cases is 4, Range of values is 0 to 3
  1094                           ; switch strategies available:
  1095                           ; Name         Instructions Cycles
  1096                           ; simple_byte           13     7 (average)
  1097                           ;	Chosen strategy is simple_byte
  1098  007E48  502E               	movf	??_Menu,w,c
  1099  007E4A  0A00               	xorlw	0	; case 0
  1100  007E4C  B4D8               	btfsc	status,2,c
  1101  007E4E  D790               	goto	l899
  1102  007E50  0A01               	xorlw	1	; case 1
  1103  007E52  B4D8               	btfsc	status,2,c
  1104  007E54  D7A6               	goto	l913
  1105  007E56  0A03               	xorlw	3	; case 2
  1106  007E58  B4D8               	btfsc	status,2,c
  1107  007E5A  D7BA               	goto	l927
  1108  007E5C  0A01               	xorlw	1	; case 3
  1109  007E5E  B4D8               	btfsc	status,2,c
  1110  007E60  D7CE               	goto	l941
  1111  007E62  D7E5               	goto	l955
  1112  007E64                     l961:
  1113                           
  1114                           ;main.c: 354:         Button_Menu_Down_State = PORTCbits.RC0;
  1115  007E64  A082               	btfss	3970,0,c	;volatile
  1116  007E66  D002               	goto	u80
  1117  007E68  0E01               	movlw	1
  1118  007E6A  D001               	goto	u86
  1119  007E6C                     u80:
  1120  007E6C  0E00               	movlw	0
  1121  007E6E                     u86:
  1122  007E6E  6E28               	movwf	_Button_Menu_Down_State,c
  1123                           
  1124                           ;main.c: 355:         if (Button_Menu_Down_State == 0 && Last_Button_Menu_Down_State == 
      +                          1) {
  1125  007E70  5028               	movf	_Button_Menu_Down_State,w,c
  1126  007E72  A4D8               	btfss	status,2,c
  1127  007E74  D005               	goto	l967
  1128  007E76  0432               	decf	_Last_Button_Menu_Down_State,w,c
  1129  007E78  A4D8               	btfss	status,2,c
  1130  007E7A  D002               	goto	l967
  1131                           
  1132                           ;main.c: 356:             Count_Push_Button++;
  1133  007E7C  4A1F               	infsnz	_Count_Push_Button,f,c
  1134  007E7E  2A20               	incf	_Count_Push_Button+1,f,c
  1135  007E80                     l967:
  1136                           
  1137                           ;main.c: 358:         Last_Button_Menu_Down_State = Button_Menu_Down_State;
  1138  007E80  C028  F032         	movff	_Button_Menu_Down_State,_Last_Button_Menu_Down_State
  1139                           
  1140                           ;main.c: 359:     } while(Flag_Menu == 1);
  1141  007E84  0425               	decf	_Flag_Menu,w,c
  1142  007E86  A4D8               	btfss	status,2,c
  1143  007E88  0012               	return	
  1144  007E8A  D7D6               	goto	l959
  1145  007E8C                     __end_of_Menu:
  1146                           	opt callstack 0
  1147                           
  1148 ;; *************** function _Close_Lock *****************
  1149 ;; Defined at:
  1150 ;;		line 116 in file "main.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1166 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1167 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1168 ;;Total ram usage:        2 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    3
  1171 ;; This function calls:
  1172 ;;		_Closing
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text4
  1179  007B6C                     __ptext4:
  1180                           	opt callstack 0
  1181  007B6C                     _Close_Lock:
  1182                           	opt callstack 27
  1183                           
  1184                           ;main.c: 117:     Inductive_State = PORTAbits.RA1;
  1185                           
  1186                           ;incstack = 0
  1187  007B6C  A280               	btfss	3968,1,c	;volatile
  1188  007B6E  D002               	goto	u550
  1189  007B70  0E01               	movlw	1
  1190  007B72  D001               	goto	u556
  1191  007B74                     u550:
  1192  007B74  0E00               	movlw	0
  1193  007B76                     u556:
  1194  007B76  6E2C               	movwf	_Inductive_State,c
  1195                           
  1196                           ;main.c: 118:     _delay((unsigned long)((50)*(20000000/4000.0)));
  1197  007B78  0E02               	movlw	2
  1198  007B7A  6E31               	movwf	(??_Close_Lock+1)& (0+255),c
  1199  007B7C  0E45               	movlw	69
  1200  007B7E  6E30               	movwf	??_Close_Lock& (0+255),c
  1201  007B80  0EAA               	movlw	170
  1202  007B82                     u947:
  1203  007B82  2EE8               	decfsz	wreg,f,c
  1204  007B84  D7FE               	bra	u947
  1205  007B86  2E30               	decfsz	??_Close_Lock& (0+255),f,c
  1206  007B88  D7FC               	bra	u947
  1207  007B8A  2E31               	decfsz	(??_Close_Lock+1)& (0+255),f,c
  1208  007B8C  D7FA               	bra	u947
  1209                           
  1210                           ;main.c: 119:     if(Inductive_State == 1 && Last_Inductive_State == 0) {
  1211  007B8E  042C               	decf	_Inductive_State,w,c
  1212  007B90  A4D8               	btfss	status,2,c
  1213  007B92  D02A               	goto	l1241
  1214  007B94  502D               	movf	_Last_Inductive_State,w,c
  1215  007B96  A4D8               	btfss	status,2,c
  1216  007B98  D027               	goto	l1241
  1217                           
  1218                           ;main.c: 120:         _delay((unsigned long)((50)*(20000000/4000.0)));
  1219  007B9A  0E02               	movlw	2
  1220  007B9C  6E31               	movwf	(??_Close_Lock+1)& (0+255),c
  1221  007B9E  0E45               	movlw	69
  1222  007BA0  6E30               	movwf	??_Close_Lock& (0+255),c
  1223  007BA2  0EAA               	movlw	170
  1224  007BA4                     u957:
  1225  007BA4  2EE8               	decfsz	wreg,f,c
  1226  007BA6  D7FE               	bra	u957
  1227  007BA8  2E30               	decfsz	??_Close_Lock& (0+255),f,c
  1228  007BAA  D7FC               	bra	u957
  1229  007BAC  2E31               	decfsz	(??_Close_Lock+1)& (0+255),f,c
  1230  007BAE  D7FA               	bra	u957
  1231                           
  1232                           ;main.c: 121:         End_Stop_Open_State = PORTAbits.RA2;
  1233  007BB0  A480               	btfss	3968,2,c	;volatile
  1234  007BB2  D002               	goto	u580
  1235  007BB4  0E01               	movlw	1
  1236  007BB6  D001               	goto	u586
  1237  007BB8                     u580:
  1238  007BB8  0E00               	movlw	0
  1239  007BBA                     u586:
  1240  007BBA  6E29               	movwf	_End_Stop_Open_State,c
  1241                           
  1242                           ;main.c: 122:         if(Inductive_State == 1 && Last_Inductive_State == 0 && End_Stop_O
      +                          pen_State == 0) {
  1243  007BBC  042C               	decf	_Inductive_State,w,c
  1244  007BBE  A4D8               	btfss	status,2,c
  1245  007BC0  D013               	goto	l1241
  1246  007BC2  502D               	movf	_Last_Inductive_State,w,c
  1247  007BC4  A4D8               	btfss	status,2,c
  1248  007BC6  D010               	goto	l1241
  1249  007BC8  5029               	movf	_End_Stop_Open_State,w,c
  1250  007BCA  A4D8               	btfss	status,2,c
  1251  007BCC  D00D               	goto	l1241
  1252                           
  1253                           ;main.c: 123:             _delay((unsigned long)((100)*(20000000/4000.0)));
  1254  007BCE  0E03               	movlw	3
  1255  007BD0  6E31               	movwf	(??_Close_Lock+1)& (0+255),c
  1256  007BD2  0E8A               	movlw	138
  1257  007BD4  6E30               	movwf	??_Close_Lock& (0+255),c
  1258  007BD6  0E56               	movlw	86
  1259  007BD8                     u967:
  1260  007BD8  2EE8               	decfsz	wreg,f,c
  1261  007BDA  D7FE               	bra	u967
  1262  007BDC  2E30               	decfsz	??_Close_Lock& (0+255),f,c
  1263  007BDE  D7FC               	bra	u967
  1264  007BE0  2E31               	decfsz	(??_Close_Lock+1)& (0+255),f,c
  1265  007BE2  D7FA               	bra	u967
  1266                           
  1267                           ;main.c: 124:             Closing();
  1268  007BE4  ECF7  F03D         	call	_Closing	;wreg free
  1269  007BE8                     l1241:
  1270                           
  1271                           ;main.c: 135:     Last_Inductive_State = Inductive_State;
  1272  007BE8  C02C  F02D         	movff	_Inductive_State,_Last_Inductive_State
  1273  007BEC  0012               	return		;funcret
  1274  007BEE                     __end_of_Close_Lock:
  1275                           	opt callstack 0
  1276                           
  1277 ;; *************** function _Closing *****************
  1278 ;; Defined at:
  1279 ;;		line 183 in file "main.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1296 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1297 ;;Total ram usage:        0 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    2
  1300 ;; This function calls:
  1301 ;;		_Analog_Read
  1302 ;;		_Sense_Current
  1303 ;; This function is called by:
  1304 ;;		_Close_Lock
  1305 ;;		_Open_Lock
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text5
  1310  007BEE                     __ptext5:
  1311                           	opt callstack 0
  1312  007BEE                     _Closing:
  1313                           	opt callstack 27
  1314                           
  1315                           ;main.c: 185:         PORTCbits.RC1 = 1;
  1316                           
  1317                           ;incstack = 0
  1318                           ;main.c: 184:     do {
  1319  007BEE  8282               	bsf	3970,1,c	;volatile
  1320                           
  1321                           ;main.c: 186:         End_Stop_Close_State = PORTAbits.RA3;
  1322  007BF0  A680               	btfss	3968,3,c	;volatile
  1323  007BF2  D002               	goto	u500
  1324  007BF4  0E01               	movlw	1
  1325  007BF6  D001               	goto	u506
  1326  007BF8                     u500:
  1327  007BF8  0E00               	movlw	0
  1328  007BFA                     u506:
  1329  007BFA  6E2A               	movwf	_End_Stop_Close_State,c
  1330                           
  1331                           ;main.c: 187:         Count_Time_Close++;
  1332  007BFC  0E01               	movlw	1
  1333  007BFE  2619               	addwf	_Count_Time_Close,f,c
  1334  007C00  0E00               	movlw	0
  1335  007C02  221A               	addwfc	_Count_Time_Close+1,f,c
  1336  007C04  221B               	addwfc	_Count_Time_Close+2,f,c
  1337  007C06  221C               	addwfc	_Count_Time_Close+3,f,c
  1338                           
  1339                           ;main.c: 188:         Current = Analog_Read();
  1340  007C08  EC43  F03D         	call	_Analog_Read	;wreg free
  1341  007C0C  C02E  F021         	movff	?_Analog_Read,_Current
  1342  007C10  C02F  F022         	movff	?_Analog_Read+1,_Current+1
  1343                           
  1344                           ;main.c: 189:         Sense_Current();
  1345  007C14  EC92  F03D         	call	_Sense_Current	;wreg free
  1346                           
  1347                           ;main.c: 190:         if(Count_Time_Close == 250000) {
  1348  007C18  0E90               	movlw	144
  1349  007C1A  1819               	xorwf	_Count_Time_Close,w,c
  1350  007C1C  E111               	bnz	l1207
  1351  007C1E  0ED0               	movlw	208
  1352  007C20  181A               	xorwf	_Count_Time_Close+1,w,c
  1353  007C22  E10E               	bnz	l1207
  1354  007C24  0E03               	movlw	3
  1355  007C26  181B               	xorwf	_Count_Time_Close+2,w,c
  1356  007C28  101C               	iorwf	_Count_Time_Close+3,w,c
  1357  007C2A  A4D8               	btfss	status,2,c
  1358  007C2C  D009               	goto	l1207
  1359                           
  1360                           ;main.c: 191:             Count_Time_Close = 0;
  1361  007C2E  0E00               	movlw	0
  1362  007C30  6E19               	movwf	_Count_Time_Close,c
  1363  007C32  0E00               	movlw	0
  1364  007C34  6E1A               	movwf	_Count_Time_Close+1,c
  1365  007C36  0E00               	movlw	0
  1366  007C38  6E1B               	movwf	_Count_Time_Close+2,c
  1367  007C3A  0E00               	movlw	0
  1368  007C3C  6E1C               	movwf	_Count_Time_Close+3,c
  1369                           
  1370                           ;main.c: 192:             break;
  1371  007C3E  D01A               	goto	u540
  1372  007C40                     l1207:
  1373  007C40  BE22               	btfsc	_Current+1,7,c
  1374  007C42  D015               	goto	l1215
  1375  007C44  0E21               	movlw	33
  1376  007C46  5C21               	subwf	_Current,w,c
  1377  007C48  0E02               	movlw	2
  1378  007C4A  5822               	subwfb	_Current+1,w,c
  1379  007C4C  A0D8               	btfss	status,0,c
  1380  007C4E  D00F               	goto	l1215
  1381                           
  1382                           ;main.c: 194:             Count_Peake_Current++;
  1383  007C50  4A23               	infsnz	_Count_Peake_Current,f,c
  1384  007C52  2A24               	incf	_Count_Peake_Current+1,f,c
  1385                           
  1386                           ;main.c: 195:             if (Count_Peake_Current > 2000) {
  1387  007C54  BE24               	btfsc	_Count_Peake_Current+1,7,c
  1388  007C56  D00B               	goto	l1215
  1389  007C58  0ED1               	movlw	209
  1390  007C5A  5C23               	subwf	_Count_Peake_Current,w,c
  1391  007C5C  0E07               	movlw	7
  1392  007C5E  5824               	subwfb	_Count_Peake_Current+1,w,c
  1393  007C60  A0D8               	btfss	status,0,c
  1394  007C62  D005               	goto	l1215
  1395                           
  1396                           ;main.c: 196:                 Count_Peake_Current = 0;
  1397  007C64  0E00               	movlw	0
  1398  007C66  6E24               	movwf	_Count_Peake_Current+1,c
  1399  007C68  0E00               	movlw	0
  1400  007C6A  6E23               	movwf	_Count_Peake_Current,c
  1401                           
  1402                           ;main.c: 197:                 break;
  1403  007C6C  D003               	goto	u540
  1404  007C6E                     l1215:
  1405                           
  1406                           ;main.c: 200:     } while(End_Stop_Close_State == 1);
  1407  007C6E  042A               	decf	_End_Stop_Close_State,w,c
  1408  007C70  B4D8               	btfsc	status,2,c
  1409  007C72  D7BD               	goto	_Closing
  1410  007C74                     u540:
  1411                           
  1412                           ;main.c: 201:     PORTCbits.RC1 = 0;
  1413  007C74  9282               	bcf	3970,1,c	;volatile
  1414                           
  1415                           ;main.c: 202:     Count_Time_Close = 0;
  1416  007C76  0E00               	movlw	0
  1417  007C78  6E19               	movwf	_Count_Time_Close,c
  1418  007C7A  0E00               	movlw	0
  1419  007C7C  6E1A               	movwf	_Count_Time_Close+1,c
  1420  007C7E  0E00               	movlw	0
  1421  007C80  6E1B               	movwf	_Count_Time_Close+2,c
  1422  007C82  0E00               	movlw	0
  1423  007C84  6E1C               	movwf	_Count_Time_Close+3,c
  1424                           
  1425                           ;main.c: 203:     Count_Peake_Current = 0;
  1426  007C86  0E00               	movlw	0
  1427  007C88  6E24               	movwf	_Count_Peake_Current+1,c
  1428  007C8A  0E00               	movlw	0
  1429  007C8C  6E23               	movwf	_Count_Peake_Current,c
  1430                           
  1431                           ;main.c: 204:     Toggle_Up = 0;
  1432  007C8E  0E00               	movlw	0
  1433  007C90  6E27               	movwf	_Toggle_Up,c
  1434                           
  1435                           ;main.c: 205:     Toggle_Down = 0;
  1436  007C92  0E00               	movlw	0
  1437  007C94  6E26               	movwf	_Toggle_Down,c
  1438  007C96  0012               	return		;funcret
  1439  007C98                     __end_of_Closing:
  1440                           	opt callstack 0
  1441                           
  1442 ;; *************** function _Sense_Current *****************
  1443 ;; Defined at:
  1444 ;;		line 224 in file "main.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1458 ;;      Params:         0       0       0       0       0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    1
  1465 ;; This function calls:
  1466 ;;		_Analog_Read
  1467 ;; This function is called by:
  1468 ;;		_Open_Lock
  1469 ;;		_Closing
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text6
  1474  007B24                     __ptext6:
  1475                           	opt callstack 0
  1476  007B24                     _Sense_Current:
  1477                           	opt callstack 28
  1478                           
  1479                           ;main.c: 225:     Current = Analog_Read();
  1480                           
  1481                           ;incstack = 0
  1482  007B24  EC43  F03D         	call	_Analog_Read	;wreg free
  1483  007B28  C02E  F021         	movff	?_Analog_Read,_Current
  1484  007B2C  C02F  F022         	movff	?_Analog_Read+1,_Current+1
  1485                           
  1486                           ;main.c: 226:         if (Current > 544) {
  1487  007B30  BE22               	btfsc	_Current+1,7,c
  1488  007B32  D017               	goto	l136
  1489  007B34  0E21               	movlw	33
  1490  007B36  5C21               	subwf	_Current,w,c
  1491  007B38  0E02               	movlw	2
  1492  007B3A  5822               	subwfb	_Current+1,w,c
  1493  007B3C  A0D8               	btfss	status,0,c
  1494  007B3E  D011               	goto	l136
  1495                           
  1496                           ;main.c: 227:             PORTB = 0x8D;
  1497  007B40  0E8D               	movlw	141
  1498  007B42  6E81               	movwf	3969,c	;volatile
  1499                           
  1500                           ;main.c: 228:             PORTCbits.RC7 = 1;
  1501  007B44  8E82               	bsf	3970,7,c	;volatile
  1502                           
  1503                           ;main.c: 229:             _delay((unsigned long)((5)*(20000000/4000000.0)));
  1504  007B46  0E08               	movlw	8
  1505  007B48                     u977:
  1506  007B48  2EE8               	decfsz	wreg,f,c
  1507  007B4A  D7FE               	bra	u977
  1508  007B4C  F000               	nop	
  1509                           
  1510                           ;main.c: 230:             PORTCbits.RC7 = 0;
  1511  007B4E  9E82               	bcf	3970,7,c	;volatile
  1512                           
  1513                           ;main.c: 231:             PORTB = 0x8F;
  1514  007B50  0E8F               	movlw	143
  1515  007B52  6E81               	movwf	3969,c	;volatile
  1516                           
  1517                           ;main.c: 232:             PORTCbits.RC6 = 1;
  1518  007B54  8C82               	bsf	3970,6,c	;volatile
  1519                           
  1520                           ;main.c: 233:             _delay((unsigned long)((5)*(20000000/4000000.0)));
  1521  007B56  0E08               	movlw	8
  1522  007B58                     u987:
  1523  007B58  2EE8               	decfsz	wreg,f,c
  1524  007B5A  D7FE               	bra	u987
  1525  007B5C  F000               	nop	
  1526                           
  1527                           ;main.c: 234:             PORTCbits.RC6 = 0;
  1528  007B5E  9C82               	bcf	3970,6,c	;volatile
  1529                           
  1530                           ;main.c: 235:         } else {
  1531  007B60  0012               	return	
  1532  007B62                     l136:
  1533                           
  1534                           ;main.c: 236:             PORTCbits.RC7 = 0;
  1535  007B62  9E82               	bcf	3970,7,c	;volatile
  1536                           
  1537                           ;main.c: 237:             PORTCbits.RC6 = 0;
  1538  007B64  9C82               	bcf	3970,6,c	;volatile
  1539                           
  1540                           ;main.c: 238:             PORTB = 0x11;
  1541  007B66  0E11               	movlw	17
  1542  007B68  6E81               	movwf	3969,c	;volatile
  1543  007B6A  0012               	return		;funcret
  1544  007B6C                     __end_of_Sense_Current:
  1545                           	opt callstack 0
  1546                           
  1547 ;; *************** function _Analog_Read *****************
  1548 ;; Defined at:
  1549 ;;		line 208 in file "main.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  2    0[COMRAM] int 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1563 ;;      Params:         2       0       0       0       0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1566 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1567 ;;Total ram usage:        2 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_Closing
  1573 ;;		_Sense_Current
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text7
  1578  007A86                     __ptext7:
  1579                           	opt callstack 0
  1580  007A86                     _Analog_Read:
  1581                           	opt callstack 28
  1582                           
  1583                           ;main.c: 209:     ADCON0bits.GO_nDONE = 1;
  1584                           
  1585                           ;incstack = 0
  1586  007A86  82C2               	bsf	4034,1,c	;volatile
  1587  007A88                     l130:
  1588  007A88  B2C2               	btfsc	4034,1,c	;volatile
  1589  007A8A  D7FE               	goto	l130
  1590                           
  1591                           ;main.c: 211:             ADC = ADRESH;
  1592  007A8C  CFC4 F01D          	movff	4036,_ADC	;volatile
  1593  007A90  6A1E               	clrf	_ADC+1,c
  1594                           
  1595                           ;main.c: 212:             ADC = ADC << 8;
  1596  007A92  501D               	movf	_ADC,w,c
  1597  007A94  6E1E               	movwf	_ADC+1,c
  1598  007A96  6A1D               	clrf	_ADC,c
  1599                           
  1600                           ;main.c: 213:             ADC = ADC + ADRESL;
  1601  007A98  50C3               	movf	4035,w,c	;volatile
  1602  007A9A  241D               	addwf	_ADC,w,c
  1603  007A9C  6E1D               	movwf	_ADC,c
  1604  007A9E  0E00               	movlw	0
  1605  007AA0  201E               	addwfc	_ADC+1,w,c
  1606  007AA2  6E1E               	movwf	_ADC+1,c
  1607                           
  1608                           ;main.c: 215:     return ADC;
  1609  007AA4  C01D  F02E         	movff	_ADC,?_Analog_Read
  1610  007AA8  C01E  F02F         	movff	_ADC+1,?_Analog_Read+1
  1611  007AAC  0012               	return		;funcret
  1612  007AAE                     __end_of_Analog_Read:
  1613                           	opt callstack 0
  1614  0000                     
  1615                           	psect	rparam
  1616  0000                     tosu	equ	0xFFF
  1617                           tosh	equ	0xFFE
  1618                           tosl	equ	0xFFD
  1619                           stkptr	equ	0xFFC
  1620                           pclatu	equ	0xFFB
  1621                           pclath	equ	0xFFA
  1622                           pcl	equ	0xFF9
  1623                           tblptru	equ	0xFF8
  1624                           tblptrh	equ	0xFF7
  1625                           tblptrl	equ	0xFF6
  1626                           tablat	equ	0xFF5
  1627                           prodh	equ	0xFF4
  1628                           prodl	equ	0xFF3
  1629                           indf0	equ	0xFEF
  1630                           postinc0	equ	0xFEE
  1631                           postdec0	equ	0xFED
  1632                           preinc0	equ	0xFEC
  1633                           plusw0	equ	0xFEB
  1634                           fsr0h	equ	0xFEA
  1635                           fsr0l	equ	0xFE9
  1636                           wreg	equ	0xFE8
  1637                           indf1	equ	0xFE7
  1638                           postinc1	equ	0xFE6
  1639                           postdec1	equ	0xFE5
  1640                           preinc1	equ	0xFE4
  1641                           plusw1	equ	0xFE3
  1642                           fsr1h	equ	0xFE2
  1643                           fsr1l	equ	0xFE1
  1644                           bsr	equ	0xFE0
  1645                           indf2	equ	0xFDF
  1646                           postinc2	equ	0xFDE
  1647                           postdec2	equ	0xFDD
  1648                           preinc2	equ	0xFDC
  1649                           plusw2	equ	0xFDB
  1650                           fsr2h	equ	0xFDA
  1651                           fsr2l	equ	0xFD9
  1652                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         45
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4      53
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Close_Lock
    _main->_Menu_In
    _main->_Open_Lock
    _Menu_In->_Menu
    _Closing->_Analog_Read
    _Sense_Current->_Analog_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _Close_Lock
                            _Menu_In
                          _Open_Lock
 ---------------------------------------------------------------------------------
 (1) _Open_Lock                                            2     2      0       0
                                              2 COMRAM     2     2      0
                            _Closing
                      _Sense_Current
 ---------------------------------------------------------------------------------
 (1) _Menu_In                                              2     2      0       0
                                              2 COMRAM     2     2      0
                               _Menu
 ---------------------------------------------------------------------------------
 (2) _Menu                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Close_Lock                                           2     2      0       0
                                              2 COMRAM     2     2      0
                            _Closing
 ---------------------------------------------------------------------------------
 (2) _Closing                                              0     0      0       0
                        _Analog_Read
                      _Sense_Current
 ---------------------------------------------------------------------------------
 (2) _Sense_Current                                        0     0      0       0
                        _Analog_Read
 ---------------------------------------------------------------------------------
 (3) _Analog_Read                                          2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Close_Lock
     _Closing
       _Analog_Read
       _Sense_Current
         _Analog_Read
   _Menu_In
     _Menu
   _Open_Lock
     _Closing
       _Analog_Read
       _Sense_Current
         _Analog_Read
     _Sense_Current
       _Analog_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4      35       1       55.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      20        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jul 19 13:01:11 2019

       _Last_Inductive_State 002D                           u80 7E6C                           u86 7E6E  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                          l130 7A88  
                        l136 7B62                          _ADC 001D                          l911 7D9E  
                        l913 7DA2                          l941 7DFE                          l927 7DD0  
                        l961 7E64                          l955 7E2E                          l967 7E80  
                        l959 7E38                          l899 7D70                          l995 7CFE  
               __CFG_CPB$OFF 000000                          u120 7CA0                          u126 7CA2  
                        u170 7D0A                          u500 7BF8                          u176 7D0C  
                        u506 7BFA                 __CFG_CPD$OFF 000000                          u540 7C74  
                        u620 7E94                          u550 7B74                          u730 7F68  
                        u650 7ED8                          u626 7E96                          u580 7BB8  
                        u556 7B76                          u740 7F8A                          u750 7FA2  
                        u807 7EA2                          u680 7EEE                          u656 7EDA  
                        u817 7EC4                          u586 7BBA                          u770 7FC4  
                        u746 7F8C                          u690 7EF8                          u907 7DDC  
                        u827 7CAA                          u756 7FA4                          u917 7DF4  
                        u837 7CEE                          u790 7FEA                          u927 7E0A  
                        u847 7D14                          u776 7FC6                          u696 7EFA  
                        u937 7E22                          u857 7D58                          u947 7B82  
                        u867 7D7C                          u957 7BA4                          u877 7D94  
                        u967 7BD8                          u887 7DAE                          u977 7B48  
                        u897 7DC6                          u987 7B58                 __CFG_BOR$OFF 000000  
                        wreg 000FE8                 __CFG_FOSC$HS 000000          _Count_Peake_Current 0023  
               __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000                         l1017 7D68  
                       l1215 7C6E                         l1207 7C40                         l1241 7BE8  
                       l1281 7F62                         l1273 7F34                         l1339 7B16  
                       l1285 7F8E                         l1295 7FE4                         l1299 7FFA  
                       _Menu 7D6E                         _main 7AE2                         start 0000  
              __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000              __end_of_Closing 7C98  
               ___param_bank 000000              __end_of_Menu_In 7D6E                __CFG_PLLDIV$1 000000  
                      ?_Menu 002E               __CFG_CCP2MX$ON 000000                        ?_main 002E  
                      _EEADR 000FA9        __end_of_Sense_Current 7B6C                   _Close_Lock 7B6C  
                      _PORTB 000F81                __CFG_USBDIV$1 000000                        _TRISB 000F93  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000                  _Analog_Read 7A86  
                      tablat 000FF5                        status 000FD8               __CFG_PBADEN$ON 000000  
            __initialization 7AAE                 __end_of_Menu 7E8C                 __end_of_main 7B24  
                     ??_Menu 002E                       ??_main 0032                __activetblptr 000002  
                     _ADCON1 000FC1                       _ADRESH 000FC4                       _ADRESL 000FC3  
                     _EEDATA 000FA8                       _EECON2 000FA7          _End_Stop_Open_State 0029  
       _End_Stop_Close_State 002A                    ??_Closing 0030                    ??_Menu_In 0030  
             __CFG_XINST$OFF 000000               __CFG_STVREN$ON 000000           __size_of_Open_Lock 0174  
                     clear_0 7AD2                  ?_Close_Lock 002E                 __pdataCOMRAM 0032  
     _Button_Menu_Down_State 0028                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                   __accesstop 0060      __end_of__initialization 7AD8  
              ___rparam_used 000001      _Last_Open_Contact_State 0034               __pcstackCOMRAM 002E  
          __end_of_Open_Lock 8000    _Last_Button_Menu_Up_State 0033                   __pnvCOMRAM 0035  
        __size_of_Close_Lock 0082                 ?_Analog_Read 002E              __CFG_VREGEN$OFF 000000  
                    _Buffer1 0001                      _Closing 7BEE                      _Menu_In 7C98  
                    _Current 0021                      __Hparam 0000                      __Lparam 0000  
                    __pcinit 7AAE                      __ramtop 0800                      __ptext0 7AE2  
                    __ptext1 7E8C                      __ptext2 7C98                      __ptext3 7D6E  
                    __ptext4 7B6C                      __ptext5 7BEE                      __ptext6 7B24  
                    __ptext7 7A86              _Inductive_State 002C         end_of_initialization 7AD8  
                _Toggle_Down 0026                __Lmediumconst 0000            _Count_Push_Button 001F  
     __size_of_Sense_Current 0048                      postinc0 000FEE                    _PORTAbits 000F80  
                  _PORTCbits 000F82                 ??_Close_Lock 0030                    _TRISAbits 000F92  
                  _TRISCbits 000F94           __end_of_Close_Lock 7BEE                    _Flag_Menu 0025  
         _Open_Contact_State 002B                __pidataCOMRAM 7A83                _Sense_Current 7B24  
        start_initialization 7AAE         __size_of_Analog_Read 0028                    _Open_Lock 7E8C  
           _Count_Auto_Close 0015             __CFG_LPT1OSC$OFF 000000                    _Toggle_Up 0027  
             ?_Sense_Current 002E                  __pbssCOMRAM 0001                     ?_Closing 002E  
                 ?_Open_Lock 002E                     ?_Menu_In 002E             _Count_Time_Close 0019  
           __CFG_WDTPS$32768 000000              ??_Sense_Current 0030                   _ADCON0bits 000FC2  
                 _ADCON2bits 000FC0  _Last_Button_Menu_Down_State 0032                  ??_Open_Lock 0030  
                 _EECON1bits 000FA6             __size_of_Closing 00AA                     __Hrparam 0000  
           __size_of_Menu_In 00D6                     __Lrparam 0000              _Count_Exit_Menu 0011  
       _Button_Menu_Up_State 0035                __size_of_Menu 011E                __size_of_main 0042  
      __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2                ??_Analog_Read 0030  
        __end_of_Analog_Read 7AAE  
