

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri May 10 12:20:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.05
    18                           ; Generated 20/12/2018 GMT
    19                           ; 
    20                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F2550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007D71                     __pidataCOMRAM:
    54                           	opt callstack 0
    55                           
    56                           ;initializer for _Last_Open_Contact_State
    57  007D71  01                 	db	1
    58                           
    59                           	psect	nvCOMRAM
    60  00000F                     __pnvCOMRAM:
    61                           	opt callstack 0
    62  00000F                     _Magnet_State:
    63                           	opt callstack 0
    64  00000F                     	ds	1
    65  0000                     _PORTAbits	set	3968
    66  0000                     _PORTBbits	set	3969
    67  0000                     _TRISB	set	3987
    68  0000                     _TRISAbits	set	3986
    69  0000                     _ADCON1	set	4033
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  007D8A                     __pcinit:
    75                           	opt callstack 0
    76  007D8A                     start_initialization:
    77                           	opt callstack 0
    78  007D8A                     __initialization:
    79                           	opt callstack 0
    80                           
    81                           ; Initialize objects allocated to COMRAM (1 bytes)
    82                           ; load TBLPTR registers with __pidataCOMRAM
    83  007D8A  0E71               	movlw	low __pidataCOMRAM
    84  007D8C  6EF6               	movwf	tblptrl,c
    85  007D8E  0E7D               	movlw	high __pidataCOMRAM
    86  007D90  6EF7               	movwf	tblptrh,c
    87  007D92  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    88  007D94  6EF8               	movwf	tblptru,c
    89  007D96  0009               	tblrd		*+	;fetch initializer
    90  007D98  CFF5 F010          	movff	tablat,__pdataCOMRAM
    91                           
    92                           ; Clear objects allocated to COMRAM (12 bytes)
    93  007D9C  EE00  F001         	lfsr	0,__pbssCOMRAM
    94  007DA0  0E0C               	movlw	12
    95  007DA2                     clear_0:
    96  007DA2  6AEE               	clrf	postinc0,c
    97  007DA4  06E8               	decf	wreg,f,c
    98  007DA6  E1FD               	bnz	clear_0
    99  007DA8                     end_of_initialization:
   100                           	opt callstack 0
   101  007DA8                     __end_of__initialization:
   102                           	opt callstack 0
   103  007DA8  0100               	movlb	0
   104  007DAA  EFB9  F03E         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	bssCOMRAM
   107  000001                     __pbssCOMRAM:
   108                           	opt callstack 0
   109  000001                     _Count_Auto_Close:
   110                           	opt callstack 0
   111  000001                     	ds	4
   112  000005                     _Count_Time_Close:
   113                           	opt callstack 0
   114  000005                     	ds	4
   115  000009                     _End_Stop_Open_State:
   116                           	opt callstack 0
   117  000009                     	ds	1
   118  00000A                     _End_Stop_Close_State:
   119                           	opt callstack 0
   120  00000A                     	ds	1
   121  00000B                     _Open_Contact_State:
   122                           	opt callstack 0
   123  00000B                     	ds	1
   124  00000C                     _Last_Magnet_State:
   125                           	opt callstack 0
   126  00000C                     	ds	1
   127                           
   128                           	psect	dataCOMRAM
   129  000010                     __pdataCOMRAM:
   130                           	opt callstack 0
   131  000010                     _Last_Open_Contact_State:
   132                           	opt callstack 0
   133  000010                     	ds	1
   134                           
   135                           	psect	cstackCOMRAM
   136  00000D                     __pcstackCOMRAM:
   137                           	opt callstack 0
   138  00000D                     ??_Close_Lock:
   139  00000D                     ??_Open_Lock:
   140  00000D                     
   141                           ; 1 bytes @ 0x0
   142  00000D                     	ds	2
   143  00000F                     
   144                           ; 1 bytes @ 0x2
   145 ;;
   146 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   147 ;;
   148 ;; *************** function _main *****************
   149 ;; Defined at:
   150 ;;		line 34 in file "main.c"
   151 ;; Parameters:    Size  Location     Type
   152 ;;		None
   153 ;; Auto vars:     Size  Location     Type
   154 ;;		None
   155 ;; Return value:  Size  Location     Type
   156 ;;                  1    wreg      void 
   157 ;; Registers used:
   158 ;;		wreg, status,2, status,0, cstack
   159 ;; Tracked objects:
   160 ;;		On entry : 0/0
   161 ;;		On exit  : 0/0
   162 ;;		Unchanged: 0/0
   163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   164 ;;      Params:         0       0       0       0       0       0       0       0       0
   165 ;;      Locals:         0       0       0       0       0       0       0       0       0
   166 ;;      Temps:          0       0       0       0       0       0       0       0       0
   167 ;;      Totals:         0       0       0       0       0       0       0       0       0
   168 ;;Total ram usage:        0 bytes
   169 ;; Hardware stack levels required when called:    1
   170 ;; This function calls:
   171 ;;		_Close_Lock
   172 ;;		_Open_Lock
   173 ;; This function is called by:
   174 ;;		Startup code after reset
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           	psect	text0
   179  007D72                     __ptext0:
   180                           	opt callstack 0
   181  007D72                     _main:
   182                           	opt callstack 30
   183                           
   184                           ;main.c: 36:     ADCON1 = 0X0F;
   185                           
   186                           ;incstack = 0
   187  007D72  0E0F               	movlw	15
   188  007D74  6EC1               	movwf	4033,c	;volatile
   189                           
   190                           ;main.c: 37:     TRISAbits.RA1 = 1;
   191  007D76  8292               	bsf	3986,1,c	;volatile
   192                           
   193                           ;main.c: 38:     TRISB = 0xE7;
   194  007D78  0EE7               	movlw	231
   195  007D7A  6E93               	movwf	3987,c	;volatile
   196                           
   197                           ;main.c: 40:     PORTBbits.RB3 = 0;
   198  007D7C  9681               	bcf	3969,3,c	;volatile
   199                           
   200                           ;main.c: 41:     PORTBbits.RB4 = 0;
   201  007D7E  9881               	bcf	3969,4,c	;volatile
   202  007D80                     l833:
   203                           
   204                           ;main.c: 44:         Close_Lock();
   205  007D80  ECD7  F03E         	call	_Close_Lock	;wreg free
   206                           
   207                           ;main.c: 45:         Open_Lock();
   208  007D84  EC38  F03F         	call	_Open_Lock	;wreg free
   209  007D88  D7FB               	goto	l833
   210  007D8A                     __end_of_main:
   211                           	opt callstack 0
   212                           
   213 ;; *************** function _Open_Lock *****************
   214 ;; Defined at:
   215 ;;		line 73 in file "main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   229 ;;      Params:         0       0       0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0       0       0
   231 ;;      Temps:          2       0       0       0       0       0       0       0       0
   232 ;;      Totals:         2       0       0       0       0       0       0       0       0
   233 ;;Total ram usage:        2 bytes
   234 ;; Hardware stack levels used:    1
   235 ;; This function calls:
   236 ;;		Nothing
   237 ;; This function is called by:
   238 ;;		_main
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           	psect	text1
   243  007E70                     __ptext1:
   244                           	opt callstack 0
   245  007E70                     _Open_Lock:
   246                           	opt callstack 30
   247                           
   248                           ;main.c: 74:     Open_Contact_State = PORTBbits.RB2;
   249                           
   250                           ;incstack = 0
   251  007E70  A481               	btfss	3969,2,c	;volatile
   252  007E72  D002               	goto	u110
   253  007E74  0E01               	movlw	1
   254  007E76  D001               	goto	u116
   255  007E78                     u110:
   256  007E78  0E00               	movlw	0
   257  007E7A                     u116:
   258  007E7A  6E0B               	movwf	_Open_Contact_State,c
   259                           
   260                           ;main.c: 75:     _delay((unsigned long)((50)*(20000000/4000.0)));
   261  007E7C  0E02               	movlw	2
   262  007E7E  6E0E               	movwf	(??_Open_Lock+1)& (0+255),c
   263  007E80  0E45               	movlw	69
   264  007E82  6E0D               	movwf	??_Open_Lock& (0+255),c
   265  007E84  0EAA               	movlw	170
   266  007E86                     u307:
   267  007E86  2EE8               	decfsz	wreg,f,c
   268  007E88  D7FE               	bra	u307
   269  007E8A  2E0D               	decfsz	??_Open_Lock& (0+255),f,c
   270  007E8C  D7FC               	bra	u307
   271  007E8E  2E0E               	decfsz	(??_Open_Lock+1)& (0+255),f,c
   272  007E90  D7FA               	bra	u307
   273                           
   274                           ;main.c: 76:     if(Open_Contact_State == 0 && Last_Open_Contact_State == 1) {
   275  007E92  500B               	movf	_Open_Contact_State,w,c
   276  007E94  A4D8               	btfss	status,2,c
   277  007E96  D0B1               	goto	l823
   278  007E98  0410               	decf	_Last_Open_Contact_State,w,c
   279  007E9A  A4D8               	btfss	status,2,c
   280  007E9C  D0AE               	goto	l823
   281                           
   282                           ;main.c: 77:         _delay((unsigned long)((50)*(20000000/4000.0)));
   283  007E9E  0E02               	movlw	2
   284  007EA0  6E0E               	movwf	(??_Open_Lock+1)& (0+255),c
   285  007EA2  0E45               	movlw	69
   286  007EA4  6E0D               	movwf	??_Open_Lock& (0+255),c
   287  007EA6  0EAA               	movlw	170
   288  007EA8                     u317:
   289  007EA8  2EE8               	decfsz	wreg,f,c
   290  007EAA  D7FE               	bra	u317
   291  007EAC  2E0D               	decfsz	??_Open_Lock& (0+255),f,c
   292  007EAE  D7FC               	bra	u317
   293  007EB0  2E0E               	decfsz	(??_Open_Lock+1)& (0+255),f,c
   294  007EB2  D7FA               	bra	u317
   295                           
   296                           ;main.c: 78:         End_Stop_Open_State = PORTBbits.RB6;
   297  007EB4  AC81               	btfss	3969,6,c	;volatile
   298  007EB6  D002               	goto	u140
   299  007EB8  0E01               	movlw	1
   300  007EBA  D001               	goto	u146
   301  007EBC                     u140:
   302  007EBC  0E00               	movlw	0
   303  007EBE                     u146:
   304  007EBE  6E09               	movwf	_End_Stop_Open_State,c
   305                           
   306                           ;main.c: 79:         if(Open_Contact_State == 0 && Last_Open_Contact_State == 1 && End_S
      +                          top_Open_State == 1) {
   307  007EC0  500B               	movf	_Open_Contact_State,w,c
   308  007EC2  A4D8               	btfss	status,2,c
   309  007EC4  D09A               	goto	l823
   310  007EC6  0410               	decf	_Last_Open_Contact_State,w,c
   311  007EC8  A4D8               	btfss	status,2,c
   312  007ECA  D097               	goto	l823
   313  007ECC  0409               	decf	_End_Stop_Open_State,w,c
   314  007ECE  A4D8               	btfss	status,2,c
   315  007ED0  D094               	goto	l823
   316  007ED2                     u170:
   317                           
   318                           ;main.c: 81:                 PORTBbits.RB4 = 1;
   319                           
   320                           ;main.c: 80:             do {
   321  007ED2  8881               	bsf	3969,4,c	;volatile
   322                           
   323                           ;main.c: 82:                 End_Stop_Open_State = PORTBbits.RB6;
   324  007ED4  AC81               	btfss	3969,6,c	;volatile
   325  007ED6  D002               	goto	u180
   326  007ED8  0E01               	movlw	1
   327  007EDA  D001               	goto	u186
   328  007EDC                     u180:
   329  007EDC  0E00               	movlw	0
   330  007EDE                     u186:
   331  007EDE  6E09               	movwf	_End_Stop_Open_State,c
   332                           
   333                           ;main.c: 83:                 Count_Time_Close++;
   334  007EE0  0E01               	movlw	1
   335  007EE2  2605               	addwf	_Count_Time_Close,f,c
   336  007EE4  0E00               	movlw	0
   337  007EE6  2206               	addwfc	_Count_Time_Close+1,f,c
   338  007EE8  2207               	addwfc	_Count_Time_Close+2,f,c
   339  007EEA  2208               	addwfc	_Count_Time_Close+3,f,c
   340                           
   341                           ;main.c: 84:                 if(Count_Time_Close == 850000) {
   342  007EEC  0E50               	movlw	80
   343  007EEE  1805               	xorwf	_Count_Time_Close,w,c
   344  007EF0  E111               	bnz	l797
   345  007EF2  0EF8               	movlw	248
   346  007EF4  1806               	xorwf	_Count_Time_Close+1,w,c
   347  007EF6  E10E               	bnz	l797
   348  007EF8  0E0C               	movlw	12
   349  007EFA  1807               	xorwf	_Count_Time_Close+2,w,c
   350  007EFC  1008               	iorwf	_Count_Time_Close+3,w,c
   351  007EFE  A4D8               	btfss	status,2,c
   352  007F00  D009               	goto	l797
   353                           
   354                           ;main.c: 85:                     Count_Time_Close = 0;
   355  007F02  0E00               	movlw	0
   356  007F04  6E05               	movwf	_Count_Time_Close,c
   357  007F06  0E00               	movlw	0
   358  007F08  6E06               	movwf	_Count_Time_Close+1,c
   359  007F0A  0E00               	movlw	0
   360  007F0C  6E07               	movwf	_Count_Time_Close+2,c
   361  007F0E  0E00               	movlw	0
   362  007F10  6E08               	movwf	_Count_Time_Close+3,c
   363                           
   364                           ;main.c: 86:                     break;
   365  007F12  D003               	goto	u200
   366  007F14                     l797:
   367                           
   368                           ;main.c: 88:             } while(End_Stop_Open_State == 1);
   369  007F14  0409               	decf	_End_Stop_Open_State,w,c
   370  007F16  B4D8               	btfsc	status,2,c
   371  007F18  D7DC               	goto	u170
   372  007F1A                     u200:
   373                           
   374                           ;main.c: 89:             PORTBbits.RB4 = 0;
   375  007F1A  9881               	bcf	3969,4,c	;volatile
   376                           
   377                           ;main.c: 90:             Count_Time_Close = 0;
   378  007F1C  0E00               	movlw	0
   379  007F1E  6E05               	movwf	_Count_Time_Close,c
   380  007F20  0E00               	movlw	0
   381  007F22  6E06               	movwf	_Count_Time_Close+1,c
   382  007F24  0E00               	movlw	0
   383  007F26  6E07               	movwf	_Count_Time_Close+2,c
   384  007F28  0E00               	movlw	0
   385  007F2A  6E08               	movwf	_Count_Time_Close+3,c
   386                           
   387                           ;main.c: 91:             Magnet_State = PORTAbits.RA1;
   388  007F2C  A280               	btfss	3968,1,c	;volatile
   389  007F2E  D002               	goto	u210
   390  007F30  0E01               	movlw	1
   391  007F32  D001               	goto	u216
   392  007F34                     u210:
   393  007F34  0E00               	movlw	0
   394  007F36                     u216:
   395  007F36  6E0F               	movwf	_Magnet_State,c
   396  007F38                     l801:
   397                           
   398                           ;main.c: 93:                 Count_Auto_Close++;
   399  007F38  0E01               	movlw	1
   400  007F3A  2601               	addwf	_Count_Auto_Close,f,c
   401  007F3C  0E00               	movlw	0
   402  007F3E  2202               	addwfc	_Count_Auto_Close+1,f,c
   403  007F40  2203               	addwfc	_Count_Auto_Close+2,f,c
   404  007F42  2204               	addwfc	_Count_Auto_Close+3,f,c
   405                           
   406                           ;main.c: 94:                 Magnet_State = PORTAbits.RA1;
   407  007F44  A280               	btfss	3968,1,c	;volatile
   408  007F46  D002               	goto	u220
   409  007F48  0E01               	movlw	1
   410  007F4A  D001               	goto	u226
   411  007F4C                     u220:
   412  007F4C  0E00               	movlw	0
   413  007F4E                     u226:
   414  007F4E  6E0F               	movwf	_Magnet_State,c
   415                           
   416                           ;main.c: 95:                 if(Count_Auto_Close == 1000000) {
   417  007F50  0E40               	movlw	64
   418  007F52  1801               	xorwf	_Count_Auto_Close,w,c
   419  007F54  E147               	bnz	l819
   420  007F56  0E42               	movlw	66
   421  007F58  1802               	xorwf	_Count_Auto_Close+1,w,c
   422  007F5A  E144               	bnz	l819
   423  007F5C  0E0F               	movlw	15
   424  007F5E  1803               	xorwf	_Count_Auto_Close+2,w,c
   425  007F60  1004               	iorwf	_Count_Auto_Close+3,w,c
   426  007F62  A4D8               	btfss	status,2,c
   427  007F64  D03F               	goto	l819
   428                           
   429                           ;main.c: 96:                     End_Stop_Open_State = PORTBbits.RB6;
   430  007F66  AC81               	btfss	3969,6,c	;volatile
   431  007F68  D002               	goto	u240
   432  007F6A  0E01               	movlw	1
   433  007F6C  D001               	goto	u246
   434  007F6E                     u240:
   435  007F6E  0E00               	movlw	0
   436  007F70                     u246:
   437  007F70  6E09               	movwf	_End_Stop_Open_State,c
   438                           
   439                           ;main.c: 97:                     if(End_Stop_Open_State == 0) {
   440  007F72  5009               	movf	_End_Stop_Open_State,w,c
   441  007F74  A4D8               	btfss	status,2,c
   442  007F76  D039               	goto	u290
   443  007F78                     u250:
   444                           
   445                           ;main.c: 99:                             PORTBbits.RB3 = 1;
   446                           
   447                           ;main.c: 98:                         do {
   448  007F78  8681               	bsf	3969,3,c	;volatile
   449                           
   450                           ;main.c: 100:                             End_Stop_Close_State = PORTBbits.RB7;
   451  007F7A  AE81               	btfss	3969,7,c	;volatile
   452  007F7C  D002               	goto	u260
   453  007F7E  0E01               	movlw	1
   454  007F80  D001               	goto	u266
   455  007F82                     u260:
   456  007F82  0E00               	movlw	0
   457  007F84                     u266:
   458  007F84  6E0A               	movwf	_End_Stop_Close_State,c
   459                           
   460                           ;main.c: 101:                             Count_Time_Close++;
   461  007F86  0E01               	movlw	1
   462  007F88  2605               	addwf	_Count_Time_Close,f,c
   463  007F8A  0E00               	movlw	0
   464  007F8C  2206               	addwfc	_Count_Time_Close+1,f,c
   465  007F8E  2207               	addwfc	_Count_Time_Close+2,f,c
   466  007F90  2208               	addwfc	_Count_Time_Close+3,f,c
   467                           
   468                           ;main.c: 102:                             if(Count_Time_Close == 850000) {
   469  007F92  0E50               	movlw	80
   470  007F94  1805               	xorwf	_Count_Time_Close,w,c
   471  007F96  E111               	bnz	l815
   472  007F98  0EF8               	movlw	248
   473  007F9A  1806               	xorwf	_Count_Time_Close+1,w,c
   474  007F9C  E10E               	bnz	l815
   475  007F9E  0E0C               	movlw	12
   476  007FA0  1807               	xorwf	_Count_Time_Close+2,w,c
   477  007FA2  1008               	iorwf	_Count_Time_Close+3,w,c
   478  007FA4  A4D8               	btfss	status,2,c
   479  007FA6  D009               	goto	l815
   480                           
   481                           ;main.c: 103:                                 Count_Time_Close = 0;
   482  007FA8  0E00               	movlw	0
   483  007FAA  6E05               	movwf	_Count_Time_Close,c
   484  007FAC  0E00               	movlw	0
   485  007FAE  6E06               	movwf	_Count_Time_Close+1,c
   486  007FB0  0E00               	movlw	0
   487  007FB2  6E07               	movwf	_Count_Time_Close+2,c
   488  007FB4  0E00               	movlw	0
   489  007FB6  6E08               	movwf	_Count_Time_Close+3,c
   490                           
   491                           ;main.c: 104:                                 break;
   492  007FB8  D003               	goto	u280
   493  007FBA                     l815:
   494                           
   495                           ;main.c: 106:                         } while(End_Stop_Close_State == 1);
   496  007FBA  040A               	decf	_End_Stop_Close_State,w,c
   497  007FBC  B4D8               	btfsc	status,2,c
   498  007FBE  D7DC               	goto	u250
   499  007FC0                     u280:
   500                           
   501                           ;main.c: 107:                         PORTBbits.RB3 = 0;
   502  007FC0  9681               	bcf	3969,3,c	;volatile
   503                           
   504                           ;main.c: 108:                         Count_Time_Close = 0;
   505  007FC2  0E00               	movlw	0
   506  007FC4  6E05               	movwf	_Count_Time_Close,c
   507  007FC6  0E00               	movlw	0
   508  007FC8  6E06               	movwf	_Count_Time_Close+1,c
   509  007FCA  0E00               	movlw	0
   510  007FCC  6E07               	movwf	_Count_Time_Close+2,c
   511  007FCE  0E00               	movlw	0
   512  007FD0  6E08               	movwf	_Count_Time_Close+3,c
   513                           
   514                           ;main.c: 109:                         Count_Auto_Close = 0;
   515  007FD2  0E00               	movlw	0
   516  007FD4  6E01               	movwf	_Count_Auto_Close,c
   517  007FD6  0E00               	movlw	0
   518  007FD8  6E02               	movwf	_Count_Auto_Close+1,c
   519  007FDA  0E00               	movlw	0
   520  007FDC  6E03               	movwf	_Count_Auto_Close+2,c
   521  007FDE  0E00               	movlw	0
   522  007FE0  6E04               	movwf	_Count_Auto_Close+3,c
   523  007FE2  D003               	goto	u290
   524  007FE4                     l819:
   525                           
   526                           ;main.c: 113:             } while(Magnet_State == 1);
   527  007FE4  040F               	decf	_Magnet_State,w,c
   528  007FE6  B4D8               	btfsc	status,2,c
   529  007FE8  D7A7               	goto	l801
   530  007FEA                     u290:
   531                           
   532                           ;main.c: 114:             Count_Auto_Close = 0;
   533  007FEA  0E00               	movlw	0
   534  007FEC  6E01               	movwf	_Count_Auto_Close,c
   535  007FEE  0E00               	movlw	0
   536  007FF0  6E02               	movwf	_Count_Auto_Close+1,c
   537  007FF2  0E00               	movlw	0
   538  007FF4  6E03               	movwf	_Count_Auto_Close+2,c
   539  007FF6  0E00               	movlw	0
   540  007FF8  6E04               	movwf	_Count_Auto_Close+3,c
   541  007FFA                     l823:
   542                           
   543                           ;main.c: 117:     Last_Open_Contact_State = Open_Contact_State;
   544  007FFA  C00B  F010         	movff	_Open_Contact_State,_Last_Open_Contact_State
   545  007FFE  0012               	return		;funcret
   546  008000                     __end_of_Open_Lock:
   547                           	opt callstack 0
   548                           
   549 ;; *************** function _Close_Lock *****************
   550 ;; Defined at:
   551 ;;		line 50 in file "main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   565 ;;      Params:         0       0       0       0       0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0       0       0       0       0
   567 ;;      Temps:          2       0       0       0       0       0       0       0       0
   568 ;;      Totals:         2       0       0       0       0       0       0       0       0
   569 ;;Total ram usage:        2 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text2
   579  007DAE                     __ptext2:
   580                           	opt callstack 0
   581  007DAE                     _Close_Lock:
   582                           	opt callstack 30
   583                           
   584                           ;main.c: 51:     Magnet_State = PORTAbits.RA1;
   585                           
   586                           ;incstack = 0
   587  007DAE  A280               	btfss	3968,1,c	;volatile
   588  007DB0  D002               	goto	u10
   589  007DB2  0E01               	movlw	1
   590  007DB4  D001               	goto	u16
   591  007DB6                     u10:
   592  007DB6  0E00               	movlw	0
   593  007DB8                     u16:
   594  007DB8  6E0F               	movwf	_Magnet_State,c
   595                           
   596                           ;main.c: 52:     _delay((unsigned long)((50)*(20000000/4000.0)));
   597  007DBA  0E02               	movlw	2
   598  007DBC  6E0E               	movwf	(??_Close_Lock+1)& (0+255),c
   599  007DBE  0E45               	movlw	69
   600  007DC0  6E0D               	movwf	??_Close_Lock& (0+255),c
   601  007DC2  0EAA               	movlw	170
   602  007DC4                     u327:
   603  007DC4  2EE8               	decfsz	wreg,f,c
   604  007DC6  D7FE               	bra	u327
   605  007DC8  2E0D               	decfsz	??_Close_Lock& (0+255),f,c
   606  007DCA  D7FC               	bra	u327
   607  007DCC  2E0E               	decfsz	(??_Close_Lock+1)& (0+255),f,c
   608  007DCE  D7FA               	bra	u327
   609                           
   610                           ;main.c: 53:     if(Magnet_State == 1 && Last_Magnet_State == 0) {
   611  007DD0  040F               	decf	_Magnet_State,w,c
   612  007DD2  A4D8               	btfss	status,2,c
   613  007DD4  D04A               	goto	l769
   614  007DD6  500C               	movf	_Last_Magnet_State,w,c
   615  007DD8  A4D8               	btfss	status,2,c
   616  007DDA  D047               	goto	l769
   617                           
   618                           ;main.c: 54:         _delay((unsigned long)((50)*(20000000/4000.0)));
   619  007DDC  0E02               	movlw	2
   620  007DDE  6E0E               	movwf	(??_Close_Lock+1)& (0+255),c
   621  007DE0  0E45               	movlw	69
   622  007DE2  6E0D               	movwf	??_Close_Lock& (0+255),c
   623  007DE4  0EAA               	movlw	170
   624  007DE6                     u337:
   625  007DE6  2EE8               	decfsz	wreg,f,c
   626  007DE8  D7FE               	bra	u337
   627  007DEA  2E0D               	decfsz	??_Close_Lock& (0+255),f,c
   628  007DEC  D7FC               	bra	u337
   629  007DEE  2E0E               	decfsz	(??_Close_Lock+1)& (0+255),f,c
   630  007DF0  D7FA               	bra	u337
   631                           
   632                           ;main.c: 55:         End_Stop_Open_State = PORTBbits.RB6;
   633  007DF2  AC81               	btfss	3969,6,c	;volatile
   634  007DF4  D002               	goto	u40
   635  007DF6  0E01               	movlw	1
   636  007DF8  D001               	goto	u46
   637  007DFA                     u40:
   638  007DFA  0E00               	movlw	0
   639  007DFC                     u46:
   640  007DFC  6E09               	movwf	_End_Stop_Open_State,c
   641                           
   642                           ;main.c: 56:         if(Magnet_State == 1 && Last_Magnet_State == 0 && End_Stop_Open_Sta
      +                          te == 0) {
   643  007DFE  040F               	decf	_Magnet_State,w,c
   644  007E00  A4D8               	btfss	status,2,c
   645  007E02  D033               	goto	l769
   646  007E04  500C               	movf	_Last_Magnet_State,w,c
   647  007E06  A4D8               	btfss	status,2,c
   648  007E08  D030               	goto	l769
   649  007E0A  5009               	movf	_End_Stop_Open_State,w,c
   650  007E0C  A4D8               	btfss	status,2,c
   651  007E0E  D02D               	goto	l769
   652  007E10                     u70:
   653                           
   654                           ;main.c: 58:                 PORTBbits.RB3 = 1;
   655                           
   656                           ;main.c: 57:             do {
   657  007E10  8681               	bsf	3969,3,c	;volatile
   658                           
   659                           ;main.c: 59:                 End_Stop_Close_State = PORTBbits.RB7;
   660  007E12  AE81               	btfss	3969,7,c	;volatile
   661  007E14  D002               	goto	u80
   662  007E16  0E01               	movlw	1
   663  007E18  D001               	goto	u86
   664  007E1A                     u80:
   665  007E1A  0E00               	movlw	0
   666  007E1C                     u86:
   667  007E1C  6E0A               	movwf	_End_Stop_Close_State,c
   668                           
   669                           ;main.c: 60:                 Count_Time_Close++;
   670  007E1E  0E01               	movlw	1
   671  007E20  2605               	addwf	_Count_Time_Close,f,c
   672  007E22  0E00               	movlw	0
   673  007E24  2206               	addwfc	_Count_Time_Close+1,f,c
   674  007E26  2207               	addwfc	_Count_Time_Close+2,f,c
   675  007E28  2208               	addwfc	_Count_Time_Close+3,f,c
   676                           
   677                           ;main.c: 61:                 if(Count_Time_Close == 850000) {
   678  007E2A  0E50               	movlw	80
   679  007E2C  1805               	xorwf	_Count_Time_Close,w,c
   680  007E2E  E111               	bnz	l765
   681  007E30  0EF8               	movlw	248
   682  007E32  1806               	xorwf	_Count_Time_Close+1,w,c
   683  007E34  E10E               	bnz	l765
   684  007E36  0E0C               	movlw	12
   685  007E38  1807               	xorwf	_Count_Time_Close+2,w,c
   686  007E3A  1008               	iorwf	_Count_Time_Close+3,w,c
   687  007E3C  A4D8               	btfss	status,2,c
   688  007E3E  D009               	goto	l765
   689                           
   690                           ;main.c: 62:                     Count_Time_Close = 0;
   691  007E40  0E00               	movlw	0
   692  007E42  6E05               	movwf	_Count_Time_Close,c
   693  007E44  0E00               	movlw	0
   694  007E46  6E06               	movwf	_Count_Time_Close+1,c
   695  007E48  0E00               	movlw	0
   696  007E4A  6E07               	movwf	_Count_Time_Close+2,c
   697  007E4C  0E00               	movlw	0
   698  007E4E  6E08               	movwf	_Count_Time_Close+3,c
   699                           
   700                           ;main.c: 63:                     break;
   701  007E50  D003               	goto	u100
   702  007E52                     l765:
   703                           
   704                           ;main.c: 65:             } while(End_Stop_Close_State == 1);
   705  007E52  040A               	decf	_End_Stop_Close_State,w,c
   706  007E54  B4D8               	btfsc	status,2,c
   707  007E56  D7DC               	goto	u70
   708  007E58                     u100:
   709                           
   710                           ;main.c: 66:             PORTBbits.RB3 = 0;
   711  007E58  9681               	bcf	3969,3,c	;volatile
   712                           
   713                           ;main.c: 67:             Count_Time_Close = 0;
   714  007E5A  0E00               	movlw	0
   715  007E5C  6E05               	movwf	_Count_Time_Close,c
   716  007E5E  0E00               	movlw	0
   717  007E60  6E06               	movwf	_Count_Time_Close+1,c
   718  007E62  0E00               	movlw	0
   719  007E64  6E07               	movwf	_Count_Time_Close+2,c
   720  007E66  0E00               	movlw	0
   721  007E68  6E08               	movwf	_Count_Time_Close+3,c
   722  007E6A                     l769:
   723                           
   724                           ;main.c: 70:     Last_Magnet_State = Magnet_State;
   725  007E6A  C00F  F00C         	movff	_Magnet_State,_Last_Magnet_State
   726  007E6E  0012               	return		;funcret
   727  007E70                     __end_of_Close_Lock:
   728                           	opt callstack 0
   729  0000                     
   730                           	psect	rparam
   731  0000                     tosu	equ	0xFFF
   732                           tosh	equ	0xFFE
   733                           tosl	equ	0xFFD
   734                           stkptr	equ	0xFFC
   735                           pclatu	equ	0xFFB
   736                           pclath	equ	0xFFA
   737                           pcl	equ	0xFF9
   738                           tblptru	equ	0xFF8
   739                           tblptrh	equ	0xFF7
   740                           tblptrl	equ	0xFF6
   741                           tablat	equ	0xFF5
   742                           prodh	equ	0xFF4
   743                           prodl	equ	0xFF3
   744                           indf0	equ	0xFEF
   745                           postinc0	equ	0xFEE
   746                           postdec0	equ	0xFED
   747                           preinc0	equ	0xFEC
   748                           plusw0	equ	0xFEB
   749                           fsr0h	equ	0xFEA
   750                           fsr0l	equ	0xFE9
   751                           wreg	equ	0xFE8
   752                           indf1	equ	0xFE7
   753                           postinc1	equ	0xFE6
   754                           postdec1	equ	0xFE5
   755                           preinc1	equ	0xFE4
   756                           plusw1	equ	0xFE3
   757                           fsr1h	equ	0xFE2
   758                           fsr1l	equ	0xFE1
   759                           bsr	equ	0xFE0
   760                           indf2	equ	0xFDF
   761                           postinc2	equ	0xFDE
   762                           postdec2	equ	0xFDD
   763                           preinc2	equ	0xFDC
   764                           plusw2	equ	0xFDB
   765                           fsr2h	equ	0xFDA
   766                           fsr2l	equ	0xFD9
   767                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         12
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Close_Lock
    _main->_Open_Lock

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _Close_Lock
                          _Open_Lock
 ---------------------------------------------------------------------------------
 (1) _Open_Lock                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Close_Lock                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Close_Lock
   _Open_Lock

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2      10       1       16.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      20        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri May 10 12:20:11 2019

                     u10 7DB6                       u40 7DFA                       u16 7DB8  
                     u70 7E10                       u46 7DFC                       u80 7E1A  
                     u86 7E1C              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l801 7F38                      l815 7FBA                      l823 7FFA  
                    l833 7D80                      l819 7FE4                      l765 7E52  
                    l769 7E6A                      l797 7F14             __CFG_CPB$OFF 000000  
                    u100 7E58                      u110 7E78                      u200 7F1A  
                    u210 7F34                      u220 7F4C                      u140 7EBC  
                    u116 7E7A                      u240 7F6E                      u216 7F36  
                    u250 7F78                      u226 7F4E                      u170 7ED2  
                    u146 7EBE                      u307 7E86                      u260 7F82  
                    u180 7EDC                      u317 7EA8                      u246 7F70  
                    u327 7DC4                      u280 7FC0                      u337 7DE6  
                    u290 7FEA                      u266 7F84                      u186 7EDE  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000        _Last_Magnet_State 000C  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _main 7D72                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 000D  
             _Close_Lock 7DAE            __CFG_USBDIV$1 000000                    _TRISB 000F93  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    tablat 000FF5  
                  status 000FD8           __CFG_PBADEN$ON 000000          __initialization 7D8A  
           __end_of_main 7D8A                   ??_main 000F            __activetblptr 000000  
                 _ADCON1 000FC1      _End_Stop_Open_State 0009     _End_Stop_Close_State 000A  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000       __size_of_Open_Lock 0190  
                 clear_0 7DA2              ?_Close_Lock 000D             __pdataCOMRAM 0010  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7DA8            ___rparam_used 000001  
_Last_Open_Contact_State 0010           __pcstackCOMRAM 000D        __end_of_Open_Lock 8000  
             __pnvCOMRAM 000F      __size_of_Close_Lock 00C2          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7D8A  
                __ramtop 0800                  __ptext0 7D72                  __ptext1 7E70  
                __ptext2 7DAE     end_of_initialization 7DA8             _Magnet_State 000F  
                postinc0 000FEE                _PORTAbits 000F80                _PORTBbits 000F81  
           ??_Close_Lock 000D                _TRISAbits 000F92       __end_of_Close_Lock 7E70  
     _Open_Contact_State 000B            __pidataCOMRAM 7D71      start_initialization 7D8A  
              _Open_Lock 7E70         _Count_Auto_Close 0001         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0001               ?_Open_Lock 000D         _Count_Time_Close 0005  
       __CFG_WDTPS$32768 000000              ??_Open_Lock 000D                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0018    __CFG_CPUDIV$OSC1_PLL2 000000  
